{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Terraform","url":"/terraform"},{"title":"Internals","url":"/terraform/internals","isCurrentPage":false},{"title":"JSON Output Format","url":"/terraform/internals/json-format","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Terraform Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Terraform","fullPath":"/terraform","theme":"terraform"},{"title":"Documentation","isOpen":true,"routes":[{"title":"About the Docs","fullPath":"/terraform/docs"},{"title":"Configuration Language","fullPath":"/terraform/language"},{"title":"Terraform CLI","fullPath":"/terraform/cli"},{"title":"Terraform Cloud","fullPath":"/terraform/cloud-docs"},{"title":"Terraform Enterprise","fullPath":"/terraform/enterprise"},{"title":"CDK for Terraform","fullPath":"/terraform/cdktf"},{"title":"Provider Use","fullPath":"/terraform/language/providers"},{"title":"Plugin Development","fullPath":"/terraform/plugin"},{"title":"Registry Publishing","fullPath":"/terraform/registry"},{"title":"Integration Program","fullPath":"/terraform/docs/partnerships"}]},{"title":"Tutorials","fullPath":"/terraform/tutorials"},{"title":"Install","fullPath":"/terraform/downloads"}],"showFilterInput":false,"title":"Terraform","visuallyHideTitle":true},{"backToLinkProps":{"text":"Terraform Home","href":"/terraform"},"levelButtonProps":{"levelUpButtonText":"Terraform Home"},"menuItems":[{"title":"Internals","fullPath":"/terraform/internals","theme":"terraform"},{"title":"Credentials Helpers","path":"credentials-helpers","filePath":"../docs/internals/credentials-helpers.mdx","fullPath":"/terraform/internals/credentials-helpers","id":"sidebar-nav-item-2"},{"title":"Debugging Terraform","path":"debugging","filePath":"../docs/internals/debugging.mdx","fullPath":"/terraform/internals/debugging","id":"sidebar-nav-item-3"},{"title":"Module Registry Protocol","path":"module-registry-protocol","filePath":"../docs/internals/module-registry-protocol.mdx","fullPath":"/terraform/internals/module-registry-protocol","id":"sidebar-nav-item-4"},{"title":"Provider Network Mirror Protocol","path":"provider-network-mirror-protocol","filePath":"../docs/internals/provider-network-mirror-protocol.mdx","fullPath":"/terraform/internals/provider-network-mirror-protocol","id":"sidebar-nav-item-5"},{"title":"Provider Registry Protocol","path":"provider-registry-protocol","filePath":"../docs/internals/provider-registry-protocol.mdx","fullPath":"/terraform/internals/provider-registry-protocol","id":"sidebar-nav-item-6"},{"title":"Resource Graph","path":"graph","filePath":"../docs/internals/graph.mdx","fullPath":"/terraform/internals/graph","id":"sidebar-nav-item-7"},{"title":"Login Protocol","path":"login-protocol","filePath":"../docs/internals/login-protocol.mdx","fullPath":"/terraform/internals/login-protocol","id":"sidebar-nav-item-8"},{"title":"JSON Output Format","path":"json-format","filePath":"../docs/internals/json-format.mdx","fullPath":"/terraform/internals/json-format","id":"sidebar-nav-item-9"},{"title":"Remote Service Discovery","path":"remote-service-discovery","filePath":"../docs/internals/remote-service-discovery.mdx","fullPath":"/terraform/internals/remote-service-discovery","id":"sidebar-nav-item-10"},{"title":"Provider Metadata","path":"provider-meta","filePath":"../docs/internals/provider-meta.mdx","fullPath":"/terraform/internals/provider-meta","id":"sidebar-nav-item-11"},{"title":"Functions Metadata","path":"functions-meta","filePath":"../docs/internals/functions-meta.mdx","fullPath":"/terraform/internals/functions-meta","id":"sidebar-nav-item-12"},{"divider":true,"id":"sidebar-nav-item-13"},{"title":"Terraform CLI","href":null,"fullPath":"/terraform/cli","id":"sidebar-nav-item-14","path":"/cli"},{"divider":true,"id":"sidebar-nav-item-15"},{"title":"Configuration Language","href":null,"fullPath":"/terraform/language","id":"sidebar-nav-item-16","path":"/language"}],"title":"Internals","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/terraform/blob/main/website/../docs/internals/json-format.mdx"},"metadata":{"title":"Internals: JSON Output Format","description":"Terraform provides a machine-readable JSON representation of state, configuration and plan.","layout":null},"outlineItems":[{"title":"JSON Output Format","url":"#json-output-format","dataHeapTrack":"toc-list-item-index-0"},{"title":"Format Summary","url":"#format-summary","dataHeapTrack":"toc-list-item-index-1"},{"title":"State Representation","url":"#state-representation","dataHeapTrack":"toc-list-item-index-2"},{"title":"Plan Representation","url":"#plan-representation","dataHeapTrack":"toc-list-item-index-3"},{"title":"Values Representation","url":"#values-representation","dataHeapTrack":"toc-list-item-index-4"},{"title":"Configuration Representation","url":"#configuration-representation","dataHeapTrack":"toc-list-item-index-5"},{"title":"Change Representation","url":"#change-representation","dataHeapTrack":"toc-list-item-index-6"},{"title":"Checks Representation","url":"#checks-representation","dataHeapTrack":"toc-list-item-index-7"}],"pageHeading":{"id":"json-output-format","title":"JSON Output Format"},"mdxSource":{"compiledSource":"var l=Object.defineProperty,N=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var r=(a,n,s)=>n in a?l(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))p.call(n,s)&&r(a,s,n[s]);if(o)for(var s of o(n))c.call(n,s)&&r(a,s,n[s]);return a},m=(a,n)=>N(a,d(n));var i=(a,n)=>{var s={};for(var t in a)p.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&o)for(var t of o(a))n.indexOf(t)<0&&c.call(a,t)&&(s[t]=a[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=i(t,[\"components\"]);return mdx(MDXLayout,m(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"div\",e({},{className:\"alert alert-info g-type-body\"}),mdx(\"p\",{parentName:\"div\"},\"\",mdx(\"strong\",{parentName:\"p\"},\"Note:\"),\" This format is available in Terraform 0.12 and later.\")),mdx(\"p\",null,\"When Terraform plans to make changes, it prints a human-readable summary to the terminal. It can also, when run with \",mdx(\"inlineCode\",{parentName:\"p\"},\"-out=<PATH>\"),\", write a much more detailed binary plan file, which can later be used to apply those changes.\"),mdx(\"p\",null,\"Since the format of plan files isn't suited for use with external tools (and likely never will be), Terraform can output a machine-readable JSON representation of a plan file's changes. It can also convert state files to the same format, to simplify data loading and provide better long-term compatibility.\"),mdx(\"p\",null,\"Use \",mdx(\"inlineCode\",{parentName:\"p\"},\"terraform show -json <FILE>\"),\" to generate a JSON representation of a plan or state file. See \",mdx(\"a\",e({parentName:\"p\"},{href:\"/terraform/cli/commands/show\"}),\"the \",mdx(\"inlineCode\",{parentName:\"a\"},\"terraform show\"),\" documentation\"),\" for more details.\"),mdx(\"p\",null,\"The output includes a \",mdx(\"inlineCode\",{parentName:\"p\"},\"format_version\"),` key, which as of Terraform 1.1.0 has\nvalue `,mdx(\"inlineCode\",{parentName:\"p\"},'\"1.0\"'),\". The semantics of this version are:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"We will increment the minor version, e.g. \",mdx(\"inlineCode\",{parentName:\"li\"},'\"1.1\"'),`, for backward-compatible\nchanges or additions. Ignore any object properties with unrecognized names to\nremain forward-compatible with future minor versions.`),mdx(\"li\",{parentName:\"ul\"},\"We will increment the major version, e.g. \",mdx(\"inlineCode\",{parentName:\"li\"},'\"2.0\"'),`, for changes that are not\nbackward-compatible. Reject any input which reports an unsupported major\nversion.`)),mdx(\"p\",null,`We will introduce new major versions only within the bounds of\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/terraform/language/v1-compatibility-promises\"}),\"the Terraform 1.0 Compatibility Promises\"),\".\"),mdx(\"h2\",e({},{id:\"format-summary\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#format-summary\",\"aria-label\":\"format summary permalink\"}),\"\\xBB\"),\"Format Summary\"),mdx(\"p\",null,\"The following sections describe the JSON output format by example, using a pseudo-JSON notation.\"),mdx(\"p\",null,\"Important elements are described with comments, which are prefixed with \",mdx(\"inlineCode\",{parentName:\"p\"},\"//\"),\".\"),mdx(\"p\",null,\"To avoid excessive repetition, we've split the complete format into several discrete sub-objects, described under separate headers. References wrapped in angle brackets (like \",mdx(\"inlineCode\",{parentName:\"p\"},\"<values-representation>\"),\") are placeholders which, in the real output, would be replaced by an instance of the specified sub-object.\"),mdx(\"p\",null,\"The JSON output format consists of the following objects and sub-objects:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#state-representation\"}),\"State Representation\"),\" \\u2014\\xA0The complete top-level object returned by \",mdx(\"inlineCode\",{parentName:\"li\"},\"terraform show -json <STATE FILE>\"),\".\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#plan-representation\"}),\"Plan Representation\"),\" \\u2014\\xA0The complete top-level object returned by \",mdx(\"inlineCode\",{parentName:\"li\"},\"terraform show -json <PLAN FILE>\"),\".\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#values-representation\"}),\"Values Representation\"),\" \\u2014\\xA0A sub-object of both plan and state output that describes current state or planned state.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#configuration-representation\"}),\"Configuration Representation\"),\" \\u2014\\xA0A sub-object of plan output that describes a parsed Terraform configuration.\",mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#expression-representation\"}),\"Expression Representation\"),\" \\u2014\\xA0A sub-object of a configuration representation that describes an unevaluated expression.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#block-expressions-representation\"}),\"Block Expressions Representation\"),\" \\u2014\\xA0A sub-object of a configuration representation that describes the expressions nested inside a block.\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#change-representation\"}),\"Change Representation\"),\" \\u2014\\xA0A sub-object of plan output that describes changes to an object.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"#checks-representation\"}),\"Checks Representation\"),\" \\u2014 A property of both the plan and state representations that describes the current status of any checks (e.g. preconditions and postconditions) in the configuration.\")),mdx(\"h2\",e({},{id:\"state-representation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#state-representation\",\"aria-label\":\"state representation permalink\"}),\"\\xBB\"),\"State Representation\"),mdx(\"p\",null,\"State does not have any significant metadata not included in the common \",mdx(\"a\",e({parentName:\"p\"},{href:\"#values-representation\"}),\"values representation\"),\", so the \",mdx(\"inlineCode\",{parentName:\"p\"},\"<state-representation>\"),\" uses the following format:\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"values\" is a values representation object derived from the values in the'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// state. Because the state is always fully known, this is always complete.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"values\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"values\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"terraform_version\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"version.string\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h2\",e({},{id:\"plan-representation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#plan-representation\",\"aria-label\":\"plan representation permalink\"}),\"\\xBB\"),\"Plan Representation\"),mdx(\"p\",null,\"A plan consists of a prior state, the configuration that is being applied to that state, and the set of changes Terraform plans to make to achieve that.\"),mdx(\"p\",null,\"For ease of consumption by callers, the plan representation includes a partial representation of the values in the final state (using a \",mdx(\"a\",e({parentName:\"p\"},{href:\"#values-representation\"}),\"value representation\"),\"), allowing callers to easily analyze the planned outcome using similar code as for analyzing the prior state.\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"format_version\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"1.0\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"prior_state\" is a representation of the state that the configuration is'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// being applied to, using the state representation described above.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"prior_state\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"state\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"configuration\" is a representation of the configuration being applied to the'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// prior state, using the configuration representation described above.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"configuration\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"configuration\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"planned_values\" is a description of what is known so far of the outcome in'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// the standard value representation, with any as-yet-unknown values omitted.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"planned_values\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"values\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"proposed_unknown\" is a representation of the attributes, including any'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// potentially-unknown attributes. Each value is replaced with \"true\" or'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"false\" depending on whether it is known in the proposed plan.'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"proposed_unknown\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"values\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"variables\" is a representation of all the variables provided for the given'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// plan. This is structured as a map similar to the output map so we can add\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// additional fields in later.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"variables\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"varname\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"value\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"varvalue\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resource_changes\" is a description of the individual change actions that'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Terraform plans to use to move from the prior state to a new state\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// matching the configuration.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resource_changes\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Each element of this array describes the action to take\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// for one instance object. All resources in the\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// configuration are included in this list.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"address\" is the full absolute address of the resource instance this'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// change applies to, in the same format as addresses in a value\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// representation.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.child.aws_instance.foo[0]\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"previous_address\" is the full absolute address of this resource'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// instance as it was known after the previous Terraform run.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Included only if the address has changed, e.g. by handling\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// a \"moved\" block in the configuration.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"previous_address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.instances.aws_instance.foo[0]\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"module_address\", if set, is the module portion of the above address.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Omitted if the instance is in the root module.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module_address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.child\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"mode\", \"type\", \"name\", and \"index\" have the same meaning as in a'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// value representation.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"mode\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"managed\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"foo\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"index\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"0\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"deposed\", if set, indicates that this action applies to a \"deposed\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// object of the given instance rather than to its \"current\" object.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// Omitted for changes to the current object. \"address\" and \"deposed\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// together form a unique key across all change objects in a particular\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// plan. The value is an opaque key representing the specific deposed\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// object.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"deposed\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"deadbeef\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"change\" describes the change that will be made to the indicated'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// object. The <change-representation> is detailed in a section below.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"change\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"change\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"action_reason\" is some optional extra context about why the'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// actions given inside \"change\" were selected. This is the JSON'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// equivalent of annotations shown in the normal plan output like\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"is tainted, so must be replaced\" as opposed to just \"must be'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// replaced\".'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// These reason codes are display hints only and the set of possible\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// hints may change over time. Users of this must be prepared to\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// encounter unrecognized reasons and treat them as unspecified reasons.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// The current set of possible values is:\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"replace_because_tainted\": the object in question is marked as'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//   \"tainted\" in the prior state, so Terraform planned to replace it.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"replace_because_cannot_update\": the provider indicated that one'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   of the requested changes isn't possible without replacing the\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   existing object with a new object.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"replace_by_request\": the user explicitly called for this object'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   to be replaced as an option when creating the plan, which therefore\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//   overrode what would have been a \"no-op\" or \"update\" action otherwise.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"delete_because_no_resource_config\": Terraform found no resource'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   configuration corresponding to this instance.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"delete_because_no_module\": The resource instance belongs to a'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   module instance that's no longer declared, perhaps due to changing\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//   the \"count\" or \"for_each\" argument on one of the containing modules.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"delete_because_wrong_repetition\": The instance key portion of the'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   resource address isn't of a suitable type for the corresponding\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   resource's configured repetition mode (count, for_each, or neither).\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"delete_because_count_index\": The corresponding resource uses count,'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   but the instance key is out of range for the currently-configured\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   count value.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"delete_because_each_key\": The corresponding resource uses for_each,'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   but the instance key doesn't match any of the keys in the\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   currently-configured for_each value.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"read_because_config_unknown\": For a data resource, Terraform cannot'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   read the data during the plan phase because of values in the\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   configuration that won't be known until the apply phase.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// - \"read_because_dependency_pending\": For a data resource, Terraform'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   cannot read the data during the plan phase because the data\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   resource depends on at least one managed resource that also has\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//   a pending change in the same plan.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// If there is no special reason to note, Terraform will omit this\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// property altogether.\"),`\n`,\"      action_reason\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"replace_because_tainted\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resource_drift\" is a description of the changes Terraform detected'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// when it compared the most recent state to the prior saved state.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resource_drift\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resource_drift\" uses the same object structure as'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resource_changes\".'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"relevant_attributes\" lists the sources of all values contributing to'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// changes in the plan. You can use \"relevant_attributes\" to filter'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resource_drift\" and determine which external changes may have affected the'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// plan result.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"relevant_attributes\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resource\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance.foo\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"attribute\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"attr\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"output_changes\" describes the planned changes to the output values of the'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// root module.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"output_changes\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Keys are the defined output value names.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"foo\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"change\" describes the change that will be made to the indicated output'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// value, using the same representation as for resource changes except\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// that the only valid actions values are:\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//   [\"create\"]'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//   [\"update\"]'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//   [\"delete\"]'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// In the Terraform CLI 0.12.0 release, Terraform is not yet fully able to\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// track changes to output values, so the actions indicated may not be\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// fully accurate, but the \"after\" value will always be correct.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"change\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"change\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"checks\" describes the partial results for any checkable objects, such as'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// resources with postconditions, with as much information as Terraform can\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// recognize at plan time. Some objects will have status \"unknown\" to'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// indicate that their status will only be determined after applying the plan.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"checks\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"checks\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"errored\" indicates whether planning failed. An errored plan cannot be applied,'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// but the actions planned before failure may help to understand the error.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"errored\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"false\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",null,\"This overall plan structure, fully expanded, is what will be printed by the \",mdx(\"inlineCode\",{parentName:\"p\"},\"terraform show -json <planfile>\"),\" command.\"),mdx(\"h2\",e({},{id:\"values-representation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#values-representation\",\"aria-label\":\"values representation permalink\"}),\"\\xBB\"),\"Values Representation\"),mdx(\"p\",null,\"A values representation is used in both state and plan output to describe current state (which is always complete) and planned state (which omits values not known until apply).\"),mdx(\"p\",null,\"The following example illustrates the structure of a \",mdx(\"inlineCode\",{parentName:\"p\"},\"<values-representation>\"),\":\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"outputs\" describes the outputs from the root module. Outputs from'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// descendent modules are not available because they are not retained in all\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// of the underlying structures we will build this values representation from.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"outputs\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"private_ip\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"value\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"192.168.3.2\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"string\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sensitive\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"false\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"root_module\" describes the resources and child modules in the root module.'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"root_module\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resources\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"address\" is the absolute resource address, which callers must consider'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// opaque but may do full string comparisons with other address strings or\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// pass this verbatim to other Terraform commands that are documented to\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// accept absolute resource addresses. The module-local portions of this\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// address are extracted in other properties below.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance.example[1]\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"mode\" can be \"managed\", for resources, or \"data\", for data resources'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"mode\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"managed\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// If the count or for_each meta-arguments are set for this resource, the\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// additional key \"index\" is present to give the instance index key. This'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// is omitted for the single instance of a resource that isn't using count\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// or for_each.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"index\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"1\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"provider_name\" is the name of the provider that is responsible for'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// this resource. This is only the provider name, not a provider\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// configuration address, and so no module path nor alias will be\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// indicated here. This is included to allow the property \"type\" to be'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// interpreted unambiguously in the unusual situation where a provider\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// offers a resource type whose name does not start with its own name,\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// such as the \"googlebeta\" provider offering \"google_compute_instance\".'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"provider_name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"schema_version\" indicates which version of the resource type schema'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// the \"values\" property conforms to.'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"schema_version\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"2\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"values\" is the JSON representation of the attribute values of the'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// resource, whose structure depends on the resource type schema. Any\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// unknown values are omitted or set to null, making them\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// indistinguishable from absent values; callers which need to distinguish\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// unknown from unset must use the plan-specific or configuration-specific\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// structures described in later sections.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"values\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"i-abc123\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"instance_type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"t2.micro\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// etc, etc\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"sensitive_values\" is the JSON representation of the sensitivity of'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// the resource's attribute values. Only attributes which are sensitive\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// are included in this structure.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sensitive_values\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"child_modules\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// Each entry in \"child_modules\" has the same structure as the root_module'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// object, with the additional \"address\" property shown below.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"address\" is the absolute module address, which callers must treat as'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// opaque but may do full string comparisons with other module address\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// strings and may pass verbatim to other Terraform commands that are\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// documented as accepting absolute module addresses.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.child\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resources\" is the same as in \"root_module\" above'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resources\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"              \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.child.aws_instance.foo\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"              \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// etc, etc\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Each module object can optionally have its own\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// nested \"child_modules\", recursively describing the'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// full module tree.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"child_modules\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token spread operator\"}),\"...\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",null,\"The translation of attribute and output values is the same intuitive mapping from HCL types to JSON types used by Terraform's \",mdx(\"a\",e({parentName:\"p\"},{href:\"/terraform/language/functions/jsonencode\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"jsonencode\")),\" function. This mapping does lose some information: lists, sets, and tuples all lower to JSON arrays while maps and objects both lower to JSON objects. Unknown values and null values are both treated as absent or null.\"),mdx(\"p\",null,\"Output values include a \",mdx(\"inlineCode\",{parentName:\"p\"},'\"type\"'),\" field, which is a \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://pkg.go.dev/github.com/zclconf/go-cty/cty#Type.MarshalJSON\"}),\"serialization of the value's type\"),\". For primitive types this is a string value, such as \",mdx(\"inlineCode\",{parentName:\"p\"},'\"number\"'),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},'\"bool\"'),\". Complex types are represented as a nested JSON array, such as \",mdx(\"inlineCode\",{parentName:\"p\"},'[\"map\",\"string\"]'),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},'[\"object\",{\"a\":\"number\"}]'),\". This can be used to reconstruct the output value with the correct type.\"),mdx(\"p\",null,'Only the \"current\" object for each resource instance is described. \"Deposed\" objects are not reflected in this structure at all; in plan representations, you can refer to the change representations for further details.'),mdx(\"p\",null,\"The intent of this structure is to give a caller access to a similar level of detail as is available to expressions within the configuration itself. This common representation is not suitable for all use-cases because it loses information compared to the data structures it is built from. For more complex needs, use the more elaborate changes and configuration representations.\"),mdx(\"h2\",e({},{id:\"configuration-representation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#configuration-representation\",\"aria-label\":\"configuration representation permalink\"}),\"\\xBB\"),\"Configuration Representation\"),mdx(\"p\",null,\"Configuration is the most complicated structure in Terraform, since it includes unevaluated expression nodes and other complexities.\"),mdx(\"p\",null,\"Because the configuration models are produced at a stage prior to expression evaluation, it is not possible to produce a values representation for configuration. Instead, we describe the physical structure of the configuration, giving access to constant values where possible and allowing callers to analyze any references to other objects that are present:\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"provider_configs\" describes all of the provider configurations throughout'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// the configuration tree, flattened into a single map for convenience since\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// provider configurations are the one concept in Terraform that can span\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// across module boundaries.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"provider_config\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Keys in the provider_configs map are to be considered opaque by callers,\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// and used just for lookups using the \"provider_config_key\" property in each'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// resource object.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"opaque_provider_ref_aws\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"name\" is the name of the provider without any alias'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"full_name\" is the fully-qualified provider name'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"full_name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"registry.terraform.io/hashicorp/aws\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"alias\" is the alias set for a non-default configuration, or unset for'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// a default configuration.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"alias\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"foo\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"module_address\" is included only for provider configurations that are'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// declared in a descendent module, and gives the opaque address for the\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// module that contains the provider configuration.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module_address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.child\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"expressions\" describes the provider-specific content of the'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// configuration block, as a block expressions representation (see section\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// below).\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"expressions\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"block\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"expressions\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"root_module\" describes the root module in the configuration, and serves'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// as the root of a tree of similar objects describing descendent modules.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"root_module\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"outputs\" describes the output value configurations in the module.'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"outputs\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Property names here are the output value names\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"expression\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sensitive\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"false\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resources\" describes the \"resource\" and \"data\" blocks in the module'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// configuration.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resources\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"address\" is the opaque absolute address for the resource itself.'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance.example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"mode\", \"type\", and \"name\" have the same meaning as for the resource'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// portion of a value representation.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"mode\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"managed\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"provider_config_key\" is the key into \"provider_configs\" (shown'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// above) for the provider configuration that this resource is\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// associated with. If the provider configuration was passed into\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// this module from the parent module, the key will point to the\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// original provider config block.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"provider_config_key\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"opaque_provider_ref_aws\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"provisioners\" is an optional field which describes any provisioners.'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Connection info will not be included here.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"provisioners\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"local-exec\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"expressions\" describes the provisioner configuration'),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"expressions\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"block\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"expressions\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"expressions\" describes the resource-type-specific content of the'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// configuration block.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"expressions\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"block\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"expressions\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"schema_version\" is the schema version number indicated by the'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// provider for the type-specific arguments described in \"expressions\".'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"schema_version\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"2\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"count_expression\" and \"for_each_expression\" describe the expressions'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// given for the corresponding meta-arguments in the resource\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// configuration block. These are omitted if the corresponding argument\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// isn't set.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"count_expression\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"for_each_expression\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"module_calls\" describes the \"module\" blocks in the module. During'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// evaluation, a module call with count or for_each may expand to multiple\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// module instances, but in configuration only the block itself is\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// represented.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module_calls\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Key is the module call name chosen in the configuration.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"child\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"resolved_source\" is the resolved source address of the module, after'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// any normalization and expansion. This could be either a\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// go-getter-style source address or a local path starting with \"./\" or'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"../\". If the user gave a registry source address then this is the'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// final location of the module as returned by the registry, after\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// following any redirect indirection.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resolved_source\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"./child\"'),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"expressions\" describes the expressions for the arguments within the'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// block that correspond to input variables in the child module.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"expressions\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"block\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"expressions\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"count_expression\" and \"for_each_expression\" describe the expressions'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// given for the corresponding meta-arguments in the module\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// configuration block. These are omitted if the corresponding argument\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// isn't set.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"count_expression\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"for_each_expression\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"module\" is a representation of the configuration of the child module'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// itself, using the same structure as the \"root_module\" object,'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// recursively describing the full module tree.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"module\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"configuration\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h3\",e({},{id:\"expression-representation\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#expression-representation\",\"aria-label\":\"expression representation permalink\"}),\"\\xBB\"),\"Expression Representation\"),mdx(\"p\",null,\"Each unevaluated expression in the configuration is represented with an \",mdx(\"inlineCode\",{parentName:\"p\"},\"<expression-representation>\"),\" object with the following structure:\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"constant_value\" is set only if the expression contains no references to'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// other objects, in which case it gives the resulting constant value. This is\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// mapped as for the individual values in a value representation.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"constant_value\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"hello\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// Alternatively, \"references\" will be set to a list of references in the'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// expression. Multi-step references will be unwrapped and duplicated for each\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// significant traversal step, allowing callers to more easily recognize the\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// objects they care about without attempting to parse the expressions.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Callers should only use string equality checks here, since the syntax may\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// be extended in future releases.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"references\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"data.template_file.foo[1].vars[\\\\\"baz\\\\\"]\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"data.template_file.foo[1].vars\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// implied by previous\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"data.template_file.foo[1]\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// implied by previous\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"data.template_file.foo\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// implied by previous\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.foo.bar\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"module.foo\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// implied by the previous\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"var.example[0]\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"var.example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// implied by the previous\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// Partial references like \"data\" and \"module\" are not included, because'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// Terraform considers \"module.foo\" to be an atomic reference, not an'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// attribute access.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"div\",e({},{className:\"alert alert-info g-type-body\"}),mdx(\"p\",{parentName:\"div\"},\"\",mdx(\"strong\",{parentName:\"p\"},\"Note:\"),\" Expressions in \",mdx(\"inlineCode\",{parentName:\"p\"},\"dynamic\"),\" blocks are not included in the configuration representation.\")),mdx(\"h3\",e({},{id:\"block-expressions-representation\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#block-expressions-representation\",\"aria-label\":\"block expressions representation permalink\"}),\"\\xBB\"),\"Block Expressions Representation\"),mdx(\"p\",null,\"In some cases, it is the entire content of a block (possibly after certain special arguments have already been handled and removed) that must be represented. For that, we have an \",mdx(\"inlineCode\",{parentName:\"p\"},\"<block-expressions-representation>\"),\" structure:\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Attribute arguments are mapped directly with the attribute name as key and\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// an <expression-representation> as value.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ami\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"instance_type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Nested block arguments are mapped as either a single nested\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// <block-expressions-representation> or an array object of these, depending on the\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// block nesting mode chosen in the schema.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//  - \"single\" nesting is a direct <block-expressions-representation>'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//  - \"list\" and \"set\" produce arrays'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//  - \"map\" produces an object'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"root_block_device\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ebs_block_device\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"expression\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",null,\"For now we expect callers to just hard-code assumptions about the schemas of particular resource types in order to process these expression representations. In a later release we will add new inspection commands to return machine-readable descriptions of the schemas themselves, allowing for more generic handling in programs such as visualization tools.\"),mdx(\"h2\",e({},{id:\"change-representation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#change-representation\",\"aria-label\":\"change representation permalink\"}),\"\\xBB\"),\"Change Representation\"),mdx(\"p\",null,\"A \",mdx(\"inlineCode\",{parentName:\"p\"},\"<change-representation>\"),\" describes the change to the indicated object.\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"actions\" are the actions that will be taken on the object selected by the'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// properties below.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// Valid actions values are:\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//    [\"no-op\"]'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//    [\"create\"]'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//    [\"read\"]'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//    [\"update\"]'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//    [\"delete\", \"create\"]'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//    [\"create\", \"delete\"]'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'//    [\"delete\"]'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// The two \"replace\" actions are represented in this way to allow callers to'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// e.g. just scan the list for \"delete\" to recognize all three situations'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// where the object will be deleted, allowing for any new deletion\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// combinations that might be added in future.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"actions\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"update\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"before\" and \"after\" are representations of the object value both before'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// and after the action. For [\"create\"] and [\"delete\"] actions, either'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"before\" or \"after\" is unset (respectively). For [\"no-op\"], the before and'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// after values are identical. The \"after\" value will be incomplete if there'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// are values within it that won't be known until after apply.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"before\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"value\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"after\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<\"),\"value\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"-\"),\"representation\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\">\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"after_unknown\" is an object value with similar structure to \"after\", but'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// with all unknown leaf values replaced with \"true\", and all known leaf'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// values omitted. This can be combined with \"after\" to reconstruct a full'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// value after the action, including values which will only be known after\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// apply.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"after_unknown\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"before_sensitive\" and \"after_sensitive\" are object values with similar'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// structure to \"before\" and \"after\", but with all sensitive leaf values'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// replaced with true, and all non-sensitive leaf values omitted. These\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// objects should be combined with \"before\" and \"after\" to prevent accidental'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// display of sensitive values in user interfaces.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"before_sensitive\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"after_sensitive\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"triggers\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"boop\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"replace_paths\" is an array of arrays representing a set of paths into the'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// object value which resulted in the action being \"replace\". This will be'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// omitted if the action is not replace, or if no paths caused the\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// replacement (for example, if the resource was tainted). Each path\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// consists of one or more steps, each of which will be a number or a\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// string.\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"replace_paths\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"triggers\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h2\",e({},{id:\"checks-representation\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#checks-representation\",\"aria-label\":\"checks representation permalink\"}),\"\\xBB\"),\"Checks Representation\"),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\"}),mdx(\"p\",{parentName:\"div\"},\"\",mdx(\"strong\",{parentName:\"p\"},\"Warning:\"),` The JSON representation of checks is experimental\nand some details may change in future Terraform versions based on feedback,\neven in minor releases of Terraform CLI.`)),mdx(\"p\",null,\"A \",mdx(\"inlineCode\",{parentName:\"p\"},\"<checks-representation>\"),\" describes the current state of a checkable object in the configuration. For example, a resource with one or more preconditions or postconditions is an example of a checkable object, and its check state represents the results of those conditions.\"),mdx(\"pre\",e({},{className:\"language-javascript\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-javascript\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"address\" describes the address of the checkable object whose status'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// this object is describing.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"kind\" specifies what kind of checkable object this is. Different'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// kinds of object will have different additional properties inside the\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// address object, but all kinds include both \"kind\" and \"to_display\".'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// The two valid kinds are \"resource\" and \"output_value\".'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"kind\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"resource\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"to_display\" contains an opaque string representation of the address'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// of the object that is suitable for display in a UI. For consumers that\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// have special handling depending on the value of \"kind\", this property'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// is a good fallback to use when the application doesn't recognize the\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"kind\" value.'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"to_display\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance.example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"mode\" is included for kind \"resource\" only, and specifies the resource'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// mode which can either be \"managed\" (for \"resource\" blocks) or \"data\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// (for \"data\" blocks).'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"mode\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"managed\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"type\" is included for kind \"resource\" only, and specifies the resource'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// type.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"name\" is the local name of the object. For a resource this is the'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// second label in the resource block header, and for an output value\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// this is the single label in the output block header.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"module\" is included if the object belongs to a module other than'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// the root module, and provides an opaque string representation of the\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// module this object belongs to. This example is of a root module\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// resource and so \"module\" is not included.'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"status\" is the aggregate status of all of the instances of the object'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// being described by this object.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// The possible values are \"pass\", \"fail\", \"error\", and \"unknown\".'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"status\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"fail\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"instances\" describes the current status of each of the instances of'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// the object being described. An object can have multiple instances if\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// it is either a resource which has \"count\" or \"for_each\" set, or if'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),`// it's contained within a module that has \"count\" or \"for_each\" set.`),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// If \"instances\" is empty or omitted, that can either mean that the object'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// has no instances at all (e.g. count = 0) or that an error blocked\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// evaluation of the repetition argument. You can distinguish these cases\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// using the \"status\" property, which will be \"pass\" or \"error\" for a'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// zero-instance object and \"unknown\" for situations where an error blocked'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// evalation.\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"instances\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"address\" is an object similar to the property of the same name in'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// the containing object. Merge the instance-level address into the\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// object-level address, overwriting any conflicting property names,\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// to create a full description of the instance's address.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"address\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"to_display\" overrides the property of the same name in the main'),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// object's address, to include any module instance or resource\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// instance keys that uniquely identify this instance.\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"to_display\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"aws_instance.example[0]\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"instance_key\" is included for resources only and specifies the'),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// resource-level instance key, which can either be a number or a\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// string. Omitted for single-instance resources.\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"instance_key\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"0\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"module\" is included if the object belongs to a module other than'),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// the root module, and provides an opaque string representation of the\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// module instance this object belongs to.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"status\" describes the result of running the configured checks'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// against this particular instance of the object, with the same\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// possible values as the \"status\" in the parent object.'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"//\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"fail\" means that the condition evaluated successfully but returned'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// false, while \"error\" means that the condition expression itself'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// was invalid.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"status\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"fail\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"problems\" might be included for statuses \"fail\" or \"error\", in'),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// which case it describes the individual conditions that failed for\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// this instance, if any.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// When a condition expression is invalid, Terraform returns that as\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// a normal error message rather than as a problem in this list.\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"problems\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),'// \"message\" is the string that resulted from evaluating the'),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"// error_message argument of the failing condition.\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"message\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"Server does not have a public IPv6 address.\"'),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)),mdx(\"p\",null,`The \"checks\" model includes both static checkable objects and instances of\nthose objects to ensure that the set of checkable objects will be consistent\neven if an error prevents full evaluation of the configuration. Any object\nin the configuration which has associated checks, such as a resource with\npreconditions or postconditions, will always be included as a checkable object\neven if a runtime error prevents Terraform from evaluating its \"count\" or\n\"for_each\" argument and therefore determining which instances of that object\nexist dynamically.`),mdx(\"p\",null,`When summarizing checks in a UI, we recommend preferring to list only the\nindividual instances and typically ignoring the top-level objects altogether.\nHowever, in any case where an object has `,mdx(\"em\",{parentName:\"p\"},\"zero\"),` instances, the UI should show\nthe top-level object instead to serve as a placeholder so that the user can\nsee that Terraform recognized the existence of the checks, even if it wasn't\nable to evaluate them on the most recent run.`))}MDXContent.isMDXComponent=!0;\n","scope":{"version":"latest"}},"product":{"slug":"terraform","name":"Terraform","algoliaConfig":{"indexName":"product_TERRAFORM"},"basePaths":["cdktf","cli","cloud-docs","cloud-docs/agents","docs","enterprise","internals","intro","language","plugin","plugin/framework","plugin/log","plugin/mux","plugin/sdkv2","plugin/testing","registry","downloads"],"docsNavItems":["docs","language","cli","cloud-docs","enterprise","cdktf",{"icon":"provider","label":"Provider Use","fullPath":"/terraform/language/providers"},"plugin","registry",{"icon":"handshake","label":"Integration Program","fullPath":"/terraform/docs/partnerships"}],"rootDocsPaths":[{"iconName":"code","name":"CDK for Terraform","path":"cdktf","productSlugForLoader":"terraform-cdk"},{"iconName":"terminal-screen","name":"Terraform CLI","path":"cli"},{"iconName":"cloud","name":"Terraform Cloud","path":"cloud-docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"cloud","name":"Cloud Docs Agents","navDataPrefix":"cloud-docs-agents","path":"cloud-docs/agents","productSlugForLoader":"terraform-docs-agents"},{"iconName":"docs","name":"About the Docs","path":"docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"org","name":"Terraform Enterprise","path":"enterprise","productSlugForLoader":"ptfe-releases"},{"iconName":"docs","name":"Internals","path":"internals"},{"iconName":"docs","name":"Intro","path":"intro"},{"iconName":"file-source","name":"Configuration Language","path":"language"},{"iconName":"wrench","name":"Plugin Development","path":"plugin","productSlugForLoader":"terraform-docs-common"},{"iconName":"plug","name":"Framework","navDataPrefix":"plugin-framework","path":"plugin/framework","productSlugForLoader":"terraform-plugin-framework"},{"iconName":"plug","name":"Logging","navDataPrefix":"plugin-log","path":"plugin/log","productSlugForLoader":"terraform-plugin-log"},{"iconName":"plug","name":"Combining and Translating","navDataPrefix":"plugin-mux","path":"plugin/mux","productSlugForLoader":"terraform-plugin-mux"},{"iconName":"plug","name":"SDKv2","path":"plugin/sdkv2","productSlugForLoader":"terraform-plugin-sdk","navDataPrefix":"plugin-sdkv2"},{"iconName":"plug","name":"Testing","path":"plugin/testing","productSlugForLoader":"terraform-plugin-testing","navDataPrefix":"plugin-testing"},{"iconName":"plus-circle","name":"Registry Publishing","path":"registry","productSlugForLoader":"terraform-docs-common"}],"currentRootDocsPath":{"iconName":"docs","name":"Internals","path":"internals"}},"projectName":null,"versions":null},"__N_SSG":true}