{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Terraform","url":"/terraform"},{"title":"Terraform CLI","url":"/terraform/cli","isCurrentPage":false},{"title":"CLI Configuration","url":"/terraform/cli/config"},{"title":"CLI Configuration","url":"/terraform/cli/config/config-file","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Terraform Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Terraform","fullPath":"/terraform","theme":"terraform"},{"title":"Install","fullPath":"/terraform/install"},{"title":"Intro to Terraform","fullPath":"/terraform/intro"},{"title":"Tutorials","fullPath":"/terraform/tutorials"},{"title":"Documentation","isOpen":true,"routes":[{"title":"Documentation","fullPath":"/terraform/docs"},{"title":"Configuration Language","fullPath":"/terraform/language"},{"title":"Terraform CLI","fullPath":"/terraform/cli"},{"title":"HCP Terraform","fullPath":"/terraform/cloud-docs"},{"title":"Terraform Enterprise","fullPath":"/terraform/enterprise"},{"title":"CDK for Terraform","fullPath":"/terraform/cdktf"},{"title":"Provider Use","fullPath":"/terraform/language/providers"},{"title":"Plugin Development","fullPath":"/terraform/plugin"},{"title":"Registry Publishing","fullPath":"/terraform/registry"},{"title":"Integration Program","fullPath":"/terraform/docs/partnerships"}]}],"showFilterInput":false,"title":"Terraform","visuallyHideTitle":true},{"backToLinkProps":{"text":"Terraform Home","href":"/terraform"},"levelButtonProps":{"levelUpButtonText":"Terraform Home"},"menuItems":[{"title":"Terraform CLI","fullPath":"/terraform/cli","theme":"terraform"},{"title":"Basic CLI Features","href":null,"fullPath":"/terraform/cli/commands","id":"sidebar-nav-item-2","path":"/cli/commands"},{"title":"Initializing Working Directories","routes":[{"title":"Overview","path":"init","filePath":"../docs/cli/init/index.mdx","fullPath":"/terraform/cli/init","id":"sidebar-nav-item-4"},{"title":"<code>init</code>","href":null,"fullPath":"/terraform/cli/commands/init","id":"sidebar-nav-item-5","path":"/cli/commands/init"},{"title":"<code>get</code>","href":null,"fullPath":"/terraform/cli/commands/get","id":"sidebar-nav-item-6","path":"/cli/commands/get"}],"id":"sidebar-nav-item-3"},{"title":"Provisioning Infrastructure","routes":[{"title":"Overview","path":"run","filePath":"../docs/cli/run/index.mdx","fullPath":"/terraform/cli/run","id":"sidebar-nav-item-8"},{"title":"<code>plan</code>","href":null,"fullPath":"/terraform/cli/commands/plan","id":"sidebar-nav-item-9","path":"/cli/commands/plan"},{"title":"<code>apply</code>","href":null,"fullPath":"/terraform/cli/commands/apply","id":"sidebar-nav-item-10","path":"/cli/commands/apply"},{"title":"<code>destroy</code>","href":null,"fullPath":"/terraform/cli/commands/destroy","id":"sidebar-nav-item-11","path":"/cli/commands/destroy"}],"id":"sidebar-nav-item-7"},{"title":"Authenticating","routes":[{"title":"Overview","path":"auth","filePath":"../docs/cli/auth/index.mdx","fullPath":"/terraform/cli/auth","id":"sidebar-nav-item-13"},{"title":"<code>login</code>","href":null,"fullPath":"/terraform/cli/commands/login","id":"sidebar-nav-item-14","path":"/cli/commands/login"},{"title":"<code>logout</code>","href":null,"fullPath":"/terraform/cli/commands/logout","id":"sidebar-nav-item-15","path":"/cli/commands/logout"}],"id":"sidebar-nav-item-12"},{"title":"Writing and Modifying Code","routes":[{"title":"Overview","path":"code","filePath":"../docs/cli/code/index.mdx","fullPath":"/terraform/cli/code","id":"sidebar-nav-item-17"},{"title":"<code>console</code>","href":null,"fullPath":"/terraform/cli/commands/console","id":"sidebar-nav-item-18","path":"/cli/commands/console"},{"title":"<code>fmt</code>","href":null,"fullPath":"/terraform/cli/commands/fmt","id":"sidebar-nav-item-19","path":"/cli/commands/fmt"},{"title":"<code>validate</code>","href":null,"fullPath":"/terraform/cli/commands/validate","id":"sidebar-nav-item-20","path":"/cli/commands/validate"}],"id":"sidebar-nav-item-16"},{"title":"Inspecting Infrastructure","routes":[{"title":"Overview","path":"inspect","filePath":"../docs/cli/inspect/index.mdx","fullPath":"/terraform/cli/inspect","id":"sidebar-nav-item-22"},{"title":"<code>graph</code>","href":null,"fullPath":"/terraform/cli/commands/graph","id":"sidebar-nav-item-23","path":"/cli/commands/graph"},{"title":"<code>output</code>","href":null,"fullPath":"/terraform/cli/commands/output","id":"sidebar-nav-item-24","path":"/cli/commands/output"},{"title":"<code>show</code>","href":null,"fullPath":"/terraform/cli/commands/show","id":"sidebar-nav-item-25","path":"/cli/commands/show"},{"title":"<code>state list</code>","href":null,"fullPath":"/terraform/cli/commands/state/list","id":"sidebar-nav-item-26","path":"/cli/commands/state/list"},{"title":"<code>state show</code>","href":null,"fullPath":"/terraform/cli/commands/state/show","id":"sidebar-nav-item-27","path":"/cli/commands/state/show"}],"id":"sidebar-nav-item-21"},{"title":"Import Infrastructure","routes":[{"title":"Overview","path":"import","filePath":"../docs/cli/import/index.mdx","fullPath":"/terraform/cli/import","id":"sidebar-nav-item-29"},{"title":"Import existing resources","path":"import/usage","filePath":"../docs/cli/import/usage.mdx","fullPath":"/terraform/cli/import/usage","id":"sidebar-nav-item-30"},{"title":"Reference","href":null,"fullPath":"/terraform/cli/commands/import","id":"sidebar-nav-item-31","path":"/cli/commands/import"}],"id":"sidebar-nav-item-28"},{"title":"Manually Update State","routes":[{"title":"Overview","path":"state","filePath":"../docs/cli/state/index.mdx","fullPath":"/terraform/cli/state","id":"sidebar-nav-item-33"},{"title":"Resource Addressing","path":"state/resource-addressing","filePath":"../docs/cli/state/resource-addressing.mdx","fullPath":"/terraform/cli/state/resource-addressing","id":"sidebar-nav-item-34"},{"title":"<code>state</code>","href":null,"fullPath":"/terraform/cli/commands/state","id":"sidebar-nav-item-35","path":"/cli/commands/state"},{"title":"Inspecting State","routes":[{"title":"Overview","path":"state/inspect","filePath":"../docs/cli/state/inspect.mdx","fullPath":"/terraform/cli/state/inspect","id":"sidebar-nav-item-37"},{"title":"<code>state list</code>","href":null,"fullPath":"/terraform/cli/commands/state/list","id":"sidebar-nav-item-38","path":"/cli/commands/state/list"},{"title":"<code>state show</code>","href":null,"fullPath":"/terraform/cli/commands/state/show","id":"sidebar-nav-item-39","path":"/cli/commands/state/show"},{"title":"<code>refresh</code>","href":null,"fullPath":"/terraform/cli/commands/refresh","id":"sidebar-nav-item-40","path":"/cli/commands/refresh"}],"id":"sidebar-nav-item-36"},{"title":"Forcing Re-creation (Tainting)","routes":[{"title":"Overview","path":"state/taint","filePath":"../docs/cli/state/taint.mdx","fullPath":"/terraform/cli/state/taint","id":"sidebar-nav-item-42"},{"title":"<code>taint</code>","href":null,"fullPath":"/terraform/cli/commands/taint","id":"sidebar-nav-item-43","path":"/cli/commands/taint"},{"title":"<code>untaint</code>","href":null,"fullPath":"/terraform/cli/commands/untaint","id":"sidebar-nav-item-44","path":"/cli/commands/untaint"}],"id":"sidebar-nav-item-41"},{"title":"Moving Resources","routes":[{"title":"Overview","path":"state/move","filePath":"../docs/cli/state/move.mdx","fullPath":"/terraform/cli/state/move","id":"sidebar-nav-item-46"},{"title":"<code>state mv</code>","href":null,"fullPath":"/terraform/cli/commands/state/mv","id":"sidebar-nav-item-47","path":"/cli/commands/state/mv"},{"title":"<code>state rm</code>","href":null,"fullPath":"/terraform/cli/commands/state/rm","id":"sidebar-nav-item-48","path":"/cli/commands/state/rm"},{"title":"<code>state replace-provider</code>","href":null,"fullPath":"/terraform/cli/commands/state/replace-provider","id":"sidebar-nav-item-49","path":"/cli/commands/state/replace-provider"}],"id":"sidebar-nav-item-45"},{"title":"Disaster Recovery","routes":[{"title":"Overview","path":"state/recover","filePath":"../docs/cli/state/recover.mdx","fullPath":"/terraform/cli/state/recover","id":"sidebar-nav-item-51"},{"title":"<code>state pull</code>","href":null,"fullPath":"/terraform/cli/commands/state/pull","id":"sidebar-nav-item-52","path":"/cli/commands/state/pull"},{"title":"<code>state push</code>","href":null,"fullPath":"/terraform/cli/commands/state/push","id":"sidebar-nav-item-53","path":"/cli/commands/state/push"},{"title":"<code>force-unlock</code>","href":null,"fullPath":"/terraform/cli/commands/force-unlock","id":"sidebar-nav-item-54","path":"/cli/commands/force-unlock"}],"id":"sidebar-nav-item-50"}],"id":"sidebar-nav-item-32"},{"title":"Managing Workspaces","routes":[{"title":"Overview","path":"workspaces","filePath":"../docs/cli/workspaces/index.mdx","fullPath":"/terraform/cli/workspaces","id":"sidebar-nav-item-56"},{"title":"<code>workspace</code>","routes":[{"title":"Overview","href":null,"fullPath":"/terraform/cli/commands/workspace","id":"sidebar-nav-item-58","path":"/cli/commands/workspace"},{"title":"<code>workspace list</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/list","id":"sidebar-nav-item-59","path":"/cli/commands/workspace/list"},{"title":"<code>workspace select</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/select","id":"sidebar-nav-item-60","path":"/cli/commands/workspace/select"},{"title":"<code>workspace new</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/new","id":"sidebar-nav-item-61","path":"/cli/commands/workspace/new"},{"title":"<code>workspace delete</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/delete","id":"sidebar-nav-item-62","path":"/cli/commands/workspace/delete"},{"title":"<code>workspace show</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/show","id":"sidebar-nav-item-63","path":"/cli/commands/workspace/show"}],"id":"sidebar-nav-item-57"}],"id":"sidebar-nav-item-55"},{"title":"Managing Plugins","routes":[{"title":"Overview","path":"plugins","filePath":"../docs/cli/plugins/index.mdx","fullPath":"/terraform/cli/plugins","id":"sidebar-nav-item-65"},{"title":"Plugin Signing","path":"plugins/signing","filePath":"../docs/cli/plugins/signing.mdx","fullPath":"/terraform/cli/plugins/signing","id":"sidebar-nav-item-66"},{"title":"<code>providers</code>","href":null,"fullPath":"/terraform/cli/commands/providers","id":"sidebar-nav-item-67","path":"/cli/commands/providers"},{"title":"<code>version</code>","href":null,"fullPath":"/terraform/cli/commands/version","id":"sidebar-nav-item-68","path":"/cli/commands/version"},{"title":"<code>providers lock</code>","href":null,"fullPath":"/terraform/cli/commands/providers/lock","id":"sidebar-nav-item-69","path":"/cli/commands/providers/lock"},{"title":"<code>providers mirror</code>","href":null,"fullPath":"/terraform/cli/commands/providers/mirror","id":"sidebar-nav-item-70","path":"/cli/commands/providers/mirror"},{"title":"<code>providers schema</code>","href":null,"fullPath":"/terraform/cli/commands/providers/schema","id":"sidebar-nav-item-71","path":"/cli/commands/providers/schema"}],"id":"sidebar-nav-item-64"},{"title":"CLI Configuration","routes":[{"title":"Overview","path":"config","filePath":"../docs/cli/config/index.mdx","fullPath":"/terraform/cli/config","id":"sidebar-nav-item-73"},{"title":"CLI Configuration","path":"config/config-file","filePath":"../docs/cli/config/config-file.mdx","fullPath":"/terraform/cli/config/config-file","id":"sidebar-nav-item-74"},{"title":"Environment Variables","path":"config/environment-variables","filePath":"../docs/cli/config/environment-variables.mdx","fullPath":"/terraform/cli/config/environment-variables","id":"sidebar-nav-item-75"}],"id":"sidebar-nav-item-72"},{"title":"Using HCP Terraform","routes":[{"title":"Overview","path":"cloud","filePath":"../docs/cli/cloud/index.mdx","fullPath":"/terraform/cli/cloud","id":"sidebar-nav-item-77"},{"title":"Connect to HCP Terraform","path":"cloud/settings","filePath":"../docs/cli/cloud/settings.mdx","fullPath":"/terraform/cli/cloud/settings","id":"sidebar-nav-item-78"},{"title":"Command Line Arguments","path":"cloud/command-line-arguments","filePath":"../docs/cli/cloud/command-line-arguments.mdx","fullPath":"/terraform/cli/cloud/command-line-arguments","id":"sidebar-nav-item-79"}],"id":"sidebar-nav-item-76"},{"title":"Testing Terraform","routes":[{"title":"Overview","path":"test","filePath":"../docs/cli/test/index.mdx","fullPath":"/terraform/cli/test","id":"sidebar-nav-item-81"},{"title":"<code>test<code>","href":null,"fullPath":"/terraform/cli/commands/test","id":"sidebar-nav-item-82","path":"/cli/commands/test"}],"id":"sidebar-nav-item-80"},{"title":"Automating Terraform","routes":[{"title":"Running Terraform in Automation","href":"/terraform/tutorials/automation/automate-terraform?utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS","id":"sidebar-nav-item-84"},{"title":"GitHub Actions","href":"/terraform/tutorials/automation/github-actions?utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS","id":"sidebar-nav-item-85"}],"id":"sidebar-nav-item-83"},{"title":"Alphabetical List of Commands","routes":[{"title":"Overview","href":null,"fullPath":"/terraform/cli/commands","id":"sidebar-nav-item-87","path":"/cli/commands"},{"title":"<code>apply</code>","href":null,"fullPath":"/terraform/cli/commands/apply","id":"sidebar-nav-item-88","path":"/cli/commands/apply"},{"title":"<code>console</code>","href":null,"fullPath":"/terraform/cli/commands/console","id":"sidebar-nav-item-89","path":"/cli/commands/console"},{"title":"<code>destroy</code>","href":null,"fullPath":"/terraform/cli/commands/destroy","id":"sidebar-nav-item-90","path":"/cli/commands/destroy"},{"title":"<code>fmt</code>","href":null,"fullPath":"/terraform/cli/commands/fmt","id":"sidebar-nav-item-91","path":"/cli/commands/fmt"},{"title":"<code>force-unlock</code>","href":null,"fullPath":"/terraform/cli/commands/force-unlock","id":"sidebar-nav-item-92","path":"/cli/commands/force-unlock"},{"title":"<code>get</code>","href":null,"fullPath":"/terraform/cli/commands/get","id":"sidebar-nav-item-93","path":"/cli/commands/get"},{"title":"<code>graph</code>","href":null,"fullPath":"/terraform/cli/commands/graph","id":"sidebar-nav-item-94","path":"/cli/commands/graph"},{"title":"<code>import</code>","href":null,"fullPath":"/terraform/cli/commands/import","id":"sidebar-nav-item-95","path":"/cli/commands/import"},{"title":"<code>init</code>","href":null,"fullPath":"/terraform/cli/commands/init","id":"sidebar-nav-item-96","path":"/cli/commands/init"},{"title":"<code>login</code>","href":null,"fullPath":"/terraform/cli/commands/login","id":"sidebar-nav-item-97","path":"/cli/commands/login"},{"title":"<code>logout</code>","href":null,"fullPath":"/terraform/cli/commands/logout","id":"sidebar-nav-item-98","path":"/cli/commands/logout"},{"title":"<code>modules</code>","href":null,"fullPath":"/terraform/cli/commands/modules","id":"sidebar-nav-item-99","path":"/cli/commands/modules"},{"title":"<code>output</code>","href":null,"fullPath":"/terraform/cli/commands/output","id":"sidebar-nav-item-100","path":"/cli/commands/output"},{"title":"<code>plan</code>","href":null,"fullPath":"/terraform/cli/commands/plan","id":"sidebar-nav-item-101","path":"/cli/commands/plan"},{"title":"<code>providers</code>","href":null,"fullPath":"/terraform/cli/commands/providers","id":"sidebar-nav-item-102","path":"/cli/commands/providers"},{"title":"<code>providers lock</code>","href":null,"fullPath":"/terraform/cli/commands/providers/lock","id":"sidebar-nav-item-103","path":"/cli/commands/providers/lock"},{"title":"<code>providers mirror</code>","href":null,"fullPath":"/terraform/cli/commands/providers/mirror","id":"sidebar-nav-item-104","path":"/cli/commands/providers/mirror"},{"title":"<code>providers schema</code>","href":null,"fullPath":"/terraform/cli/commands/providers/schema","id":"sidebar-nav-item-105","path":"/cli/commands/providers/schema"},{"title":"<code>refresh</code>","href":null,"fullPath":"/terraform/cli/commands/refresh","id":"sidebar-nav-item-106","path":"/cli/commands/refresh"},{"title":"<code>show</code>","href":null,"fullPath":"/terraform/cli/commands/show","id":"sidebar-nav-item-107","path":"/cli/commands/show"},{"title":"<code>state</code>","href":null,"fullPath":"/terraform/cli/commands/state","id":"sidebar-nav-item-108","path":"/cli/commands/state"},{"title":"<code>state list</code>","href":null,"fullPath":"/terraform/cli/commands/state/list","id":"sidebar-nav-item-109","path":"/cli/commands/state/list"},{"title":"<code>state mv</code>","href":null,"fullPath":"/terraform/cli/commands/state/mv","id":"sidebar-nav-item-110","path":"/cli/commands/state/mv"},{"title":"<code>state pull</code>","href":null,"fullPath":"/terraform/cli/commands/state/pull","id":"sidebar-nav-item-111","path":"/cli/commands/state/pull"},{"title":"<code>state push</code>","href":null,"fullPath":"/terraform/cli/commands/state/push","id":"sidebar-nav-item-112","path":"/cli/commands/state/push"},{"title":"<code>state replace-provider</code>","href":null,"fullPath":"/terraform/cli/commands/state/replace-provider","id":"sidebar-nav-item-113","path":"/cli/commands/state/replace-provider"},{"title":"<code>state rm</code>","href":null,"fullPath":"/terraform/cli/commands/state/rm","id":"sidebar-nav-item-114","path":"/cli/commands/state/rm"},{"title":"<code>state show</code>","href":null,"fullPath":"/terraform/cli/commands/state/show","id":"sidebar-nav-item-115","path":"/cli/commands/state/show"},{"title":"<code>taint</code>","href":null,"fullPath":"/terraform/cli/commands/taint","id":"sidebar-nav-item-116","path":"/cli/commands/taint"},{"title":"<code>test</code>","href":null,"fullPath":"/terraform/cli/commands/test","id":"sidebar-nav-item-117","path":"/cli/commands/test"},{"title":"<code>untaint</code>","href":null,"fullPath":"/terraform/cli/commands/untaint","id":"sidebar-nav-item-118","path":"/cli/commands/untaint"},{"title":"<code>validate</code>","href":null,"fullPath":"/terraform/cli/commands/validate","id":"sidebar-nav-item-119","path":"/cli/commands/validate"},{"title":"<code>version</code>","href":null,"fullPath":"/terraform/cli/commands/version","id":"sidebar-nav-item-120","path":"/cli/commands/version"},{"title":"<code>workspace</code>","href":null,"fullPath":"/terraform/cli/commands/workspace","id":"sidebar-nav-item-121","path":"/cli/commands/workspace"},{"title":"<code>workspace list</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/list","id":"sidebar-nav-item-122","path":"/cli/commands/workspace/list"},{"title":"<code>workspace select</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/select","id":"sidebar-nav-item-123","path":"/cli/commands/workspace/select"},{"title":"<code>workspace new</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/new","id":"sidebar-nav-item-124","path":"/cli/commands/workspace/new"},{"title":"<code>workspace delete</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/delete","id":"sidebar-nav-item-125","path":"/cli/commands/workspace/delete"},{"title":"<code>workspace show</code>","href":null,"fullPath":"/terraform/cli/commands/workspace/show","id":"sidebar-nav-item-126","path":"/cli/commands/workspace/show"},{"title":"0.12upgrade","href":null,"fullPath":"/terraform/cli/commands/0.12upgrade","id":"sidebar-nav-item-127","path":"/cli/commands/0.12upgrade"},{"title":"0.13upgrade","href":null,"fullPath":"/terraform/cli/commands/0.13upgrade","id":"sidebar-nav-item-128","path":"/cli/commands/0.13upgrade"}],"id":"sidebar-nav-item-86"},{"divider":true,"id":"sidebar-nav-item-129"},{"title":"Terraform Internals","href":null,"fullPath":"/terraform/internals","id":"sidebar-nav-item-130","path":"/internals"}],"title":"Terraform CLI","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/terraform/blob/main/website/../docs/cli/config/config-file.mdx"},"metadata":{"title":"Create a Terraform CLI configuration file","description":"Learn how to create a `.terraformrc` or `terraform.rc` file to define Terraform CLI settings, including credentials, plugin caching, and provider installation.","layout":null},"outlineItems":[{"title":"Create a Terraform CLI configuration file","url":"#create-a-terraform-cli-configuration-file"},{"title":"Introduction","url":"#introduction"},{"title":"Locations","url":"#locations"},{"title":"Configuration File Syntax","url":"#configuration-file-syntax"},{"title":"Available Settings","url":"#available-settings"},{"title":"Credentials","url":"#credentials-1"},{"title":"Provider Installation","url":"#provider-installation"},{"title":"Removed Settings","url":"#removed-settings"}],"pageHeading":{"id":"create-a-terraform-cli-configuration-file","title":"Create a Terraform CLI configuration file"},"mdxSource":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",null,`⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️`),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},`[!IMPORTANT]`,mdx(\"br\",{parentName:\"p\"}),`\n`,mdx(\"strong\",{parentName:\"p\"},`Documentation Update:`),` Product documentation previously located in `,mdx(\"inlineCode\",{parentName:\"p\"},`/website`),` has moved to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/web-unified-docs\"},mdx(\"inlineCode\",{parentName:\"a\"},`hashicorp/web-unified-docs`)),` repository, where all product documentation is now centralized. Please make contributions directly to `,mdx(\"inlineCode\",{parentName:\"p\"},`web-unified-docs`),`, since changes to `,mdx(\"inlineCode\",{parentName:\"p\"},`/website`),` in this repository will not appear on developer.hashicorp.com.\n⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️`)),mdx(\"p\",null,`This topic describes how create a configuration file to customize the behavior of the Terraform CLI.`),mdx(\"h2\",{\"id\":\"introduction\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#introduction\",\"aria-label\":\"introduction permalink\"},`\\xbb`),`Introduction`),mdx(\"p\",null,`The CLI configuration file configures per-user settings for CLI behaviors,\nwhich apply across all Terraform working directories. This is separate from\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/language\"},`your infrastructure configuration`),`.\nYou can define custom configurations in file called `,mdx(\"inlineCode\",{parentName:\"p\"},`.terraformrc`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform.rc`),`\ndepending on the host operating system as explained below.`),mdx(\"h2\",{\"id\":\"locations\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#locations\",\"aria-label\":\"locations permalink\"},`\\xbb`),`Locations`),mdx(\"p\",null,`The configuration can be placed in a single file whose location depends\non the host operating system:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`On Windows, the file must be named `,mdx(\"inlineCode\",{parentName:\"li\"},`terraform.rc`),` and placed\nin the relevant user's `,mdx(\"inlineCode\",{parentName:\"li\"},`%APPDATA%`),` directory. The physical location\nof this directory depends on your Windows version and system configuration;\nuse `,mdx(\"inlineCode\",{parentName:\"li\"},`$env:APPDATA`),` in PowerShell to find its location on your system.`),mdx(\"li\",{parentName:\"ul\"},`On all other systems, the file must be named `,mdx(\"inlineCode\",{parentName:\"li\"},`.terraformrc`),` (note\nthe leading period) and placed directly in the home directory\nof the relevant user.`)),mdx(\"p\",null,`On Windows, beware of Windows Explorer's default behavior of hiding filename\nextensions. Terraform will not recognize a file named `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform.rc.txt`),` as a\nCLI configuration file, even though Windows Explorer may `,mdx(\"em\",{parentName:\"p\"},`display`),` its name\nas just `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform.rc`),`. Use `,mdx(\"inlineCode\",{parentName:\"p\"},`dir`),` from PowerShell or Command Prompt to\nconfirm the filename.`),mdx(\"p\",null,`The location of the Terraform CLI configuration file can also be specified\nusing the `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_CLI_CONFIG_FILE`),` `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cli/config/environment-variables\"},`environment variable`),`.\nAny such file should follow the naming pattern `,mdx(\"inlineCode\",{parentName:\"p\"},`*.tfrc`),`.`),mdx(\"h2\",{\"id\":\"configuration-file-syntax\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#configuration-file-syntax\",\"aria-label\":\"configuration file syntax permalink\"},`\\xbb`),`Configuration File Syntax`),mdx(\"p\",null,`The configuration file uses the same `,mdx(\"em\",{parentName:\"p\"},`HCL`),` syntax as `,mdx(\"inlineCode\",{parentName:\"p\"},`.tf`),` files, but with\ndifferent attributes and blocks. The following example illustrates the\ngeneral syntax; see the following section for information on the meaning\nof each of these settings:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"hcl\",\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`plugin_cache_dir   `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"$HOME/.terraform.d/plugin-cache\"`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`disable_checkpoint `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`)),mdx(\"h2\",{\"id\":\"available-settings\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#available-settings\",\"aria-label\":\"available settings permalink\"},`\\xbb`),`Available Settings`),mdx(\"p\",null,`The following settings can be set in the CLI configuration file:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"credentials\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#credentials\",\"aria-label\":\"credentials permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`credentials`)),` - configures credentials for use with HCP Terraform or\nTerraform Enterprise. See `,mdx(\"a\",{parentName:\"p\",\"href\":\"#credentials\"},`Credentials`),` below for more\ninformation.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"credentials_helper\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#credentials_helper\",\"aria-label\":\"credentials_helper permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`credentials_helper`)),` - configures an external helper program for the storage\nand retrieval of credentials for HCP Terraform or Terraform Enterprise.\nSee `,mdx(\"a\",{parentName:\"p\",\"href\":\"#credentials-helpers\"},`Credentials Helpers`),` below for more information.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"disable_checkpoint\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#disable_checkpoint\",\"aria-label\":\"disable_checkpoint permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`disable_checkpoint`)),` — when set to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, disables\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cli/commands#upgrade-and-security-bulletin-checks\"},`upgrade and security bulletin checks`),`\nthat require reaching out to HashiCorp-provided network services.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"disable_checkpoint_signature\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#disable_checkpoint_signature\",\"aria-label\":\"disable_checkpoint_signature permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`disable_checkpoint_signature`)),` — when set to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, allows the upgrade and\nsecurity bulletin checks described above but disables the use of an anonymous\nid used to de-duplicate warning messages.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"plugin_cache_dir\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#plugin_cache_dir\",\"aria-label\":\"plugin_cache_dir permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`plugin_cache_dir`)),` — enables\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#provider-plugin-cache\"},`plugin caching`),`\nand specifies, as a string, the location of the plugin cache directory.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"provider_installation\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#provider_installation\",\"aria-label\":\"provider_installation permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`provider_installation`)),` - customizes the installation methods used by\n`,mdx(\"inlineCode\",{parentName:\"p\"},`terraform init`),` when installing provider plugins. See\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#provider-installation\"},`Provider Installation`),` below for more information.`))),mdx(\"h2\",{\"id\":\"credentials-1\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#credentials-1\",\"aria-label\":\"credentials permalink\"},`\\xbb`),`Credentials`),mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"https://cloud.hashicorp.com/products/terraform\"},`HCP Terraform`),` provides a number of remote network\nservices for use with Terraform, and\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/enterprise\"},`Terraform Enterprise`),` allows hosting those\nservices inside your own infrastructure. For example, these systems offer both\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cloud-docs/run/cli\"},`remote operations`),` and a\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cloud-docs/registry\"},`private module registry`),`.`),mdx(\"p\",null,`When interacting with Terraform-specific network services, Terraform expects\nto find API tokens in CLI configuration files in `,mdx(\"inlineCode\",{parentName:\"p\"},`credentials`),` blocks:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"hcl\",\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`credentials`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"app.terraform.io\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  token `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"xxxxxx.atlasv1.zzzzzzzzzzzzz\"`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)),mdx(\"p\",null,`If you are running the Terraform CLI interactively on a computer with a web browser, you can use `,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cli/commands/login\"},`the `,mdx(\"inlineCode\",{parentName:\"a\"},`terraform login`),` command`),`\nto get credentials and automatically save them in the CLI configuration. If\nnot, you can manually write `,mdx(\"inlineCode\",{parentName:\"p\"},`credentials`),` blocks.`),mdx(\"p\",null,`You can have multiple `,mdx(\"inlineCode\",{parentName:\"p\"},`credentials`),` blocks if you regularly use services from\nmultiple hosts. Many users will configure only one, for either\nHCP Terraform (at `,mdx(\"inlineCode\",{parentName:\"p\"},`app.terraform.io`),`) or for their organization's own\nTerraform Enterprise host. Each `,mdx(\"inlineCode\",{parentName:\"p\"},`credentials`),` block contains a `,mdx(\"inlineCode\",{parentName:\"p\"},`token`),` argument\ngiving the API token to use for that host.`),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Important:`),` If you are using HCP Terraform or Terraform Enterprise,\nthe token provided must be either a\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cloud-docs/users-teams-organizations/users#api-tokens\"},`user token`),`\nor a\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/cloud-docs/users-teams-organizations/api-tokens#team-api-tokens\"},`team token`),`;\norganization tokens cannot be used for command-line Terraform actions.`)),mdx(\"div\",{\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The credentials hostname must match the hostname in your module\nsources and/or backend configuration. If your Terraform Enterprise instance\nis available at multiple hostnames, use only one of them consistently.\nHCP Terraform responds to API calls at both its current hostname\n`,mdx(\"inlineCode\",{parentName:\"p\"},`app.terraform.io`),`, and its historical hostname `,mdx(\"inlineCode\",{parentName:\"p\"},`atlas.hashicorp.com`),`.`)),mdx(\"h3\",{\"id\":\"environment-variable-credentials\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#environment-variable-credentials\",\"aria-label\":\"environment variable credentials permalink\"},`\\xbb`),`Environment Variable Credentials`),mdx(\"div\",{\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` Environment variable credentials are supported in Terraform v1.2.0 and later.`)),mdx(\"p\",null,`If you would prefer not to store your API tokens directly in the CLI configuration, you may use\na host-specific environment variable. Environment variable names should have the prefix\n`,mdx(\"inlineCode\",{parentName:\"p\"},`TF_TOKEN_`),` added to the domain name, with periods encoded as underscores. For example, the\nvalue of a variable named `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_TOKEN_app_terraform_io`),` will be used as a bearer authorization\ntoken when the CLI makes service requests to the hostname `,mdx(\"inlineCode\",{parentName:\"p\"},`app.terraform.io`),`.`),mdx(\"p\",null,`You must convert domain names containing non-ASCII characters to their `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.charset.org/punycode\"},`punycode equivalent`),`\nwith an ACE prefix. For example, token credentials for 例えば.com must be set in a variable\ncalled `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_TOKEN_xn--r8j3dr99h_com`),`.`),mdx(\"p\",null,`Hyphens are also valid within host names but usually invalid as variable names and\nmay be encoded as double underscores. For example, you can set a token for the domain name\n`,mdx(\"inlineCode\",{parentName:\"p\"},`caf\\xe9.fr`),` as `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_TOKEN_xn--caf-dma.fr`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_TOKEN_xn--caf-dma_fr`),`,  or `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_TOKEN_xn____caf__dma_fr`),`.\nIf multiple variables evaluate to the same hostname, Terraform will choose the one defined last\nin the operating system's variable table.`),mdx(\"h3\",{\"id\":\"credentials-helpers\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#credentials-helpers\",\"aria-label\":\"credentials helpers permalink\"},`\\xbb`),`Credentials Helpers`),mdx(\"p\",null,`You can configure a `,mdx(\"inlineCode\",{parentName:\"p\"},`credentials_helper`),` to instruct Terraform to use a different credentials storage mechanism.`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"hcl\",\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`credentials_helper`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"example\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  args `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` []`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},`credentials_helper`),` is a configuration block that can appear at most once\nin the CLI configuration. Its label (`,mdx(\"inlineCode\",{parentName:\"p\"},`\"example\"`),` above) is the name of the\ncredentials helper to use. The `,mdx(\"inlineCode\",{parentName:\"p\"},`args`),` argument is optional and allows passing\nadditional arguments to the helper program, for example if it needs to be\nconfigured with the address of a remote host to access for credentials.`),mdx(\"p\",null,`A configured credentials helper will be consulted only to retrieve credentials\nfor hosts that are `,mdx(\"em\",{parentName:\"p\"},`not`),` explicitly configured in a `,mdx(\"inlineCode\",{parentName:\"p\"},`credentials`),` block as\ndescribed in the previous section.\nConversely, this means you can override the credentials returned by the helper\nfor a specific hostname by writing a `,mdx(\"inlineCode\",{parentName:\"p\"},`credentials`),` block alongside the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`credentials_helper`),` block.`),mdx(\"p\",null,`Terraform does not include any credentials helpers in the main distribution.\nTo learn how to write and install your own credentials helpers to integrate\nwith existing in-house credentials management systems, see\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/internals/credentials-helpers\"},`the guide to Credentials Helper internals`),`.`),mdx(\"h3\",{\"id\":\"credentials-source-priority-order\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#credentials-source-priority-order\",\"aria-label\":\"credentials source priority order permalink\"},`\\xbb`),`Credentials Source Priority Order`),mdx(\"p\",null,`Credentials found in an environment variable for a particular service host\nas described above will be preferred over those in CLI config as set by `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform login`),`.\nIf neither are set, any configured credentials helper will be consulted.`),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` For users of `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/apparentlymart/terraform-credentials-env\"},`terraform-credentials-helper`),`, this priority has been effectively reversed following the\nrelease of Terraform 1.2. Previously, credentials found within CLI config or set by\n`,mdx(\"inlineCode\",{parentName:\"p\"},`terraform login`),` were preferred to `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_TOKEN_*`),` variables.`)),mdx(\"h2\",{\"id\":\"provider-installation\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#provider-installation\",\"aria-label\":\"provider installation permalink\"},`\\xbb`),`Provider Installation`),mdx(\"p\",null,`The default way to install provider plugins is from a provider registry. The\norigin registry for a provider is encoded in the provider's source address,\nlike `,mdx(\"inlineCode\",{parentName:\"p\"},`registry.terraform.io/hashicorp/aws`),`. For convenience in the common case,\nTerraform allows omitting the hostname portion for providers on\n`,mdx(\"inlineCode\",{parentName:\"p\"},`registry.terraform.io`),`, so you can write shorter public provider addresses like\n`,mdx(\"inlineCode\",{parentName:\"p\"},`hashicorp/aws`),`.`),mdx(\"p\",null,`Downloading a plugin directly from its origin registry is not always\nappropriate, though. For example, the system where you are running Terraform\nmay not be able to access an origin registry due to firewall restrictions\nwithin your organization or your locality.`),mdx(\"p\",null,`To allow using Terraform providers in these situations, there are some\nalternative options for making provider plugins available to Terraform which\nwe'll describe in the following sections.`),mdx(\"h3\",{\"id\":\"explicit-installation-method-configuration\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#explicit-installation-method-configuration\",\"aria-label\":\"explicit installation method configuration permalink\"},`\\xbb`),`Explicit Installation Method Configuration`),mdx(\"p\",null,`A `,mdx(\"inlineCode\",{parentName:\"p\"},`provider_installation`),` block in the CLI configuration allows overriding\nTerraform's default installation behaviors, so you can force Terraform to use\na local mirror for some or all of the providers you intend to use.`),mdx(\"p\",null,`The general structure of a `,mdx(\"inlineCode\",{parentName:\"p\"},`provider_installation`),` block is as follows:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"hcl\",\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`provider_installation`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  filesystem_mirror`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    path    `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"/usr/share/terraform/providers\"`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    include `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"example.com/*/*\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  direct`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    exclude `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"example.com/*/*\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)),mdx(\"p\",null,`Each of the nested blocks inside the `,mdx(\"inlineCode\",{parentName:\"p\"},`provider_installation`),` block specifies\none installation method. Each installation method can take both `,mdx(\"inlineCode\",{parentName:\"p\"},`include`),`\nand `,mdx(\"inlineCode\",{parentName:\"p\"},`exclude`),` patterns that specify which providers a particular installation\nmethod can be used for. In the example above, we specify that any provider\nwhose origin registry is at `,mdx(\"inlineCode\",{parentName:\"p\"},`example.com`),` can be installed only from the\nfilesystem mirror at `,mdx(\"inlineCode\",{parentName:\"p\"},`/usr/share/terraform/providers`),`, while all other\nproviders can be installed only directly from their origin registries.`),mdx(\"p\",null,`If you set both `,mdx(\"inlineCode\",{parentName:\"p\"},`include`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`exclude`),` for a particular installation\nmethod, the exclusion patterns take priority. For example, including\n`,mdx(\"inlineCode\",{parentName:\"p\"},`registry.terraform.io/hashicorp/*`),` but also excluding\n`,mdx(\"inlineCode\",{parentName:\"p\"},`registry.terraform.io/hashicorp/dns`),` will make that installation method apply\nto everything in the `,mdx(\"inlineCode\",{parentName:\"p\"},`hashicorp`),` namespace with the exception of\n`,mdx(\"inlineCode\",{parentName:\"p\"},`hashicorp/dns`),`.`),mdx(\"p\",null,`As with provider source addresses in the main configuration, you can omit\nthe `,mdx(\"inlineCode\",{parentName:\"p\"},`registry.terraform.io/`),` prefix for providers distributed through the\npublic Terraform registry, even when using wildcards. For example,\n`,mdx(\"inlineCode\",{parentName:\"p\"},`registry.terraform.io/hashicorp/*`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`hashicorp/*`),` are equivalent.\n`,mdx(\"inlineCode\",{parentName:\"p\"},`*/*`),` is a shorthand for `,mdx(\"inlineCode\",{parentName:\"p\"},`registry.terraform.io/*/*`),`, not for\n`,mdx(\"inlineCode\",{parentName:\"p\"},`*/*/*`),`.`),mdx(\"p\",null,`The following are the two supported installation method types:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"direct\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#direct\",\"aria-label\":\"direct permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`direct`)),`: request information about the provider directly from its origin\nregistry and download over the network from the location that registry\nindicates. This method expects no additional arguments.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"filesystem_mirror\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#filesystem_mirror\",\"aria-label\":\"filesystem_mirror permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`filesystem_mirror`)),`: consult a directory on the local disk for copies of\nproviders. This method requires the additional argument `,mdx(\"inlineCode\",{parentName:\"p\"},`path`),` to indicate\nwhich directory to look in.`),mdx(\"p\",{parentName:\"li\"},`Terraform expects the given directory to contain a nested directory structure\nwhere the path segments together provide metadata about the available\nproviders. The following two directory structures are supported:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},`Packed layout: `,mdx(\"inlineCode\",{parentName:\"li\"},`HOSTNAME/NAMESPACE/TYPE/terraform-provider-TYPE_VERSION_TARGET.zip`),`\nis the distribution zip file obtained from the provider's origin registry.`),mdx(\"li\",{parentName:\"ul\"},`Unpacked layout: `,mdx(\"inlineCode\",{parentName:\"li\"},`HOSTNAME/NAMESPACE/TYPE/VERSION/TARGET`),` is a directory\ncontaining the result of extracting the provider's distribution zip file.`)),mdx(\"p\",{parentName:\"li\"},`In both layouts, the `,mdx(\"inlineCode\",{parentName:\"p\"},`VERSION`),` is a string like `,mdx(\"inlineCode\",{parentName:\"p\"},`2.0.0`),` and the `,mdx(\"inlineCode\",{parentName:\"p\"},`TARGET`),`\nspecifies a particular target platform using a format like `,mdx(\"inlineCode\",{parentName:\"p\"},`darwin_amd64`),`,\n`,mdx(\"inlineCode\",{parentName:\"p\"},`linux_arm`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`windows_amd64`),`, etc.`),mdx(\"p\",{parentName:\"li\"},`If you use the unpacked layout, Terraform will attempt to create a symbolic\nlink to the mirror directory when installing the provider, rather than\ncreating a deep copy of the directory. The packed layout prevents this\nbecause Terraform must extract the zip file during installation.`),mdx(\"p\",{parentName:\"li\"},`You can include multiple `,mdx(\"inlineCode\",{parentName:\"p\"},`filesystem_mirror`),` blocks in order to specify\nseveral different directories to search.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"network_mirror\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"p\",{parentName:\"li\"},mdx(\"a\",{parentName:\"p\",\"href\":\"#network_mirror\",\"aria-label\":\"network_mirror permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`network_mirror`)),`: consult a particular HTTPS server for copies of providers,\nregardless of which registry host they belong to. This method requires the\nadditional argument `,mdx(\"inlineCode\",{parentName:\"p\"},`url`),` to indicate the mirror base URL, which should\nuse the `,mdx(\"inlineCode\",{parentName:\"p\"},`https:`),` scheme and end with a trailing slash.`),mdx(\"p\",{parentName:\"li\"},`Terraform expects the given URL to be a base URL for an implementation of\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/internals/provider-network-mirror-protocol\"},`the provider network mirror protocol`),`,\nwhich is designed to be relatively easy to implement using typical static\nwebsite hosting mechanisms.`))),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Warning:`),` Don't configure `,mdx(\"inlineCode\",{parentName:\"p\"},`network_mirror`),` URLs that you do not trust.\nProvider mirror servers are subject to TLS certificate checks to verify\nidentity, but a network mirror with a TLS certificate can potentially serve\nmodified copies of upstream providers with malicious content.`)),mdx(\"p\",null,`Terraform will try all of the specified methods whose include and exclude\npatterns match a given provider, and select the newest version available across\nall of those methods that matches the version constraint given in each\nTerraform configuration. If you have a local mirror of a particular provider\nand intend Terraform to use that local mirror exclusively, you must either\nremove the `,mdx(\"inlineCode\",{parentName:\"p\"},`direct`),` installation method altogether or use its `,mdx(\"inlineCode\",{parentName:\"p\"},`exclude`),`\nargument to disable its use for specific providers.`),mdx(\"h3\",{\"id\":\"implied-local-mirror-directories\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#implied-local-mirror-directories\",\"aria-label\":\"implied local mirror directories permalink\"},`\\xbb`),`Implied Local Mirror Directories`),mdx(\"p\",null,`If your CLI configuration does not include a `,mdx(\"inlineCode\",{parentName:\"p\"},`provider_installation`),` block at\nall, Terraform produces an `,mdx(\"em\",{parentName:\"p\"},`implied`),` configuration. The implied configuration\nincludes a selection of `,mdx(\"inlineCode\",{parentName:\"p\"},`filesystem_mirror`),` methods and then the `,mdx(\"inlineCode\",{parentName:\"p\"},`direct`),`\nmethod.`),mdx(\"p\",null,`The set of directories Terraform can select as filesystem mirrors depends on\nthe operating system where you are running Terraform:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},`Windows:`),` `,mdx(\"inlineCode\",{parentName:\"li\"},`%APPDATA%/terraform.d/plugins`),` and `,mdx(\"inlineCode\",{parentName:\"li\"},`%APPDATA%/HashiCorp/Terraform/plugins`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},`Mac OS X:`),` `,mdx(\"inlineCode\",{parentName:\"li\"},`$HOME/.terraform.d/plugins`),`,\n`,mdx(\"inlineCode\",{parentName:\"li\"},`~/Library/Application Support/io.terraform/plugins`),`, and\n`,mdx(\"inlineCode\",{parentName:\"li\"},`/Library/Application Support/io.terraform/plugins`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},`Linux and other Unix-like systems`),`:`,mdx(\"inlineCode\",{parentName:\"li\"},`$HOME/.terraform.d/plugins`),` and\n`,mdx(\"inlineCode\",{parentName:\"li\"},`terraform/plugins`),` located within a valid\n`,mdx(\"a\",{parentName:\"li\",\"href\":\"https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\"},`XDG Base Directory`),`\ndata directory such as `,mdx(\"inlineCode\",{parentName:\"li\"},`$XDG_DATA_HOME/terraform/plugins`),`.\nWithout any XDG environment variables set, Terraform will use\n`,mdx(\"inlineCode\",{parentName:\"li\"},`~/.local/share/terraform/plugins`),`,\n`,mdx(\"inlineCode\",{parentName:\"li\"},`/usr/local/share/terraform/plugins`),`, and `,mdx(\"inlineCode\",{parentName:\"li\"},`/usr/share/terraform/plugins`),`.`)),mdx(\"p\",null,`If a `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform.d/plugins`),` directory exists in the current working directory\nthen Terraform will also include that directory, regardless of your operating\nsystem. This behavior changes when you use the `,mdx(\"inlineCode\",{parentName:\"p\"},`-chdir`),` option with the `,mdx(\"inlineCode\",{parentName:\"p\"},`init`),` command. In that case, Terraform checks for the `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform.d/plugins`),` directory in the launch directory and not in the directory you specified with `,mdx(\"inlineCode\",{parentName:\"p\"},`-chdir`),`.`),mdx(\"p\",null,`Terraform will check each of the paths above to see if it exists, and if so\ntreat it as a filesystem mirror. The directory structure inside each one must\ntherefore match one of the two structures described for `,mdx(\"inlineCode\",{parentName:\"p\"},`filesystem_mirror`),`\nblocks in `,mdx(\"a\",{parentName:\"p\",\"href\":\"#explicit-installation-method-configuration\"},`Explicit Installation Method Configuration`),`.`),mdx(\"p\",null,`In addition to the zero or more implied `,mdx(\"inlineCode\",{parentName:\"p\"},`filesystem_mirror`),` blocks, Terraform\nalso creates an implied `,mdx(\"inlineCode\",{parentName:\"p\"},`direct`),` block. Terraform will scan all of the\nfilesystem mirror directories to see which providers are placed there and\nautomatically exclude all of those providers from the implied `,mdx(\"inlineCode\",{parentName:\"p\"},`direct`),` block.\n(This automatic `,mdx(\"inlineCode\",{parentName:\"p\"},`exclude`),` behavior applies only to `,mdx(\"em\",{parentName:\"p\"},`implicit`),` `,mdx(\"inlineCode\",{parentName:\"p\"},`direct`),` blocks;\nif you use explicit `,mdx(\"inlineCode\",{parentName:\"p\"},`provider_installation`),` you will need to write the intended\nexclusions out yourself.)`),mdx(\"h3\",{\"id\":\"provider-plugin-cache\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#provider-plugin-cache\",\"aria-label\":\"provider plugin cache permalink\"},`\\xbb`),`Provider Plugin Cache`),mdx(\"p\",null,`By default, `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform init`),` downloads plugins into a subdirectory of the\nworking directory so that each working directory is self-contained. As a\nconsequence, if you have multiple configurations that use the same provider\nthen a separate copy of its plugin will be downloaded for each configuration.`),mdx(\"p\",null,`Given that provider plugins can be quite large (on the order of hundreds of\nmegabytes), this default behavior can be inconvenient for those with slow\nor metered Internet connections. Therefore Terraform optionally allows the\nuse of a local directory as a shared plugin cache, which then allows each\ndistinct plugin binary to be downloaded only once.`),mdx(\"p\",null,`To enable the plugin cache, use the `,mdx(\"inlineCode\",{parentName:\"p\"},`plugin_cache_dir`),` setting in\nthe CLI configuration file. For example:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"hcl\",\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`plugin_cache_dir `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"$HOME/.terraform.d/plugin-cache\"`)),`\n`)),mdx(\"p\",null,`This directory must already exist before Terraform will cache plugins;\nTerraform will not create the directory itself.`),mdx(\"p\",null,`Please note that on Windows it is necessary to use forward slash separators\n(`,mdx(\"inlineCode\",{parentName:\"p\"},`/`),`) rather than the conventional backslash (`,mdx(\"inlineCode\",{parentName:\"p\"},`\\\\`),`) since the configuration\nfile parser considers a backslash to begin an escape sequence.`),mdx(\"p\",null,`Setting this in the configuration file is the recommended approach for a\npersistent setting. Alternatively, the `,mdx(\"inlineCode\",{parentName:\"p\"},`TF_PLUGIN_CACHE_DIR`),` environment\nvariable can be used to enable caching or to override an existing cache\ndirectory within a particular shell session:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"bash\",\"className\":\"language-bash\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`export`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` TF_PLUGIN_CACHE_DIR`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"$HOME/.terraform.d/plugin-cache\"`)),`\n`)),mdx(\"p\",null,`When a plugin cache directory is enabled, the `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform init`),` command will\nstill use the configured or implied installation methods to obtain metadata\nabout which plugins are available, but once a suitable version has been\nselected it will first check to see if the chosen plugin is already available\nin the cache directory. If so, Terraform will use the previously-downloaded\ncopy.`),mdx(\"p\",null,`If the selected plugin is not already in the cache, Terraform will download\nit into the cache first and then copy it from there into the correct location\nunder your current working directory. When possible Terraform will use\nsymbolic links to avoid storing a separate copy of a cached plugin in multiple\ndirectories.`),mdx(\"p\",null,`The plugin cache directory `,mdx(\"em\",{parentName:\"p\"},`must not`),` also be one of the configured or implied\nfilesystem mirror directories, since the cache management logic conflicts with\nthe filesystem mirror logic when operating on the same directory.`),mdx(\"p\",null,`Terraform will never itself delete a plugin from the plugin cache once it has\nbeen placed there. Over time, as plugins are upgraded, the cache directory may\ngrow to contain several unused versions which you must delete manually.`),mdx(\"div\",{\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The plugin cache directory is not guaranteed to be concurrency\nsafe. The provider installer's behavior in environments with multiple `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform\ninit`),` calls is undefined.`)),mdx(\"h3\",{\"id\":\"allowing-the-provider-plugin-cache-to-break-the-dependency-lock-file\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#allowing-the-provider-plugin-cache-to-break-the-dependency-lock-file\",\"aria-label\":\"allowing the provider plugin cache to break the dependency lock file permalink\"},`\\xbb`),`Allowing the Provider Plugin Cache to break the dependency lock file`),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The option described in is for unusual and exceptional situations\nonly. Do not set this option unless you are sure you need it and you fully\nunderstand the consequences of enabling it.`)),mdx(\"p\",null,`By default Terraform will use packages from the global cache directory only\nif they match at least one of the checksums recorded in the\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/language/files/dependency-lock\"},`dependency lock file`),`\nfor that provider. This ensures that Terraform can always\ngenerate a complete and correct dependency lock file entry the first time you\nuse a new provider in a particular configuration.`),mdx(\"p\",null,`However, we know that in some special situations teams have been unable to use\nthe dependency lock file as intended, and so they don't include it in their\nversion control as recommended and instead let Terraform re-generate it each\ntime it installs providers.`),mdx(\"p\",null,`For those teams that don't preserve the dependency lock file in their version\ncontrol systems between runs, Terraform allows an additional CLI Configuration\nsetting which tells Terraform to always treat a package in the cache directory\nas valid even if there isn't already an entry in the dependency lock file\nto confirm it:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"hcl\",\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`plugin_cache_may_break_dependency_lock_file `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`)),mdx(\"p\",null,`Alternatively, you can set the environment variable\n`,mdx(\"inlineCode\",{parentName:\"p\"},`TF_PLUGIN_CACHE_MAY_BREAK_DEPENDENCY_LOCK_FILE`),` to any value other than the\nempty string or `,mdx(\"inlineCode\",{parentName:\"p\"},`0`),`, which is equivalent to the above setting.`),mdx(\"p\",null,`Setting this option gives Terraform CLI permission to create an incomplete\ndependency lock file entry for a provider if that would allow Terraform to\nuse the cache to install that provider. In that situation the dependency lock\nfile will be valid for use on the current system but may not be valid for use on\nanother computer with a different operating system or CPU architecture, because\nit will include only a checksum of the package in the global cache.`),mdx(\"p\",null,`We recommend that most users leave this option unset, in which case Terraform\nwill always install a provider from upstream the first time you use it with\na particular configuration, but can then re-use the cache entry on later runs\nonce the dependency lock file records valid checksums for the provider package.`),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The Terraform team intends to improve the dependency lock file\nmechanism in future versions so that it will be usable in more situations. At\nthat time this option will become silently ignored. If your workflow relies on\nthe use of this option, please open a GitHub issue to share details about your\nsituation so that we can consider how to support it without breaking the\ndependency lock file.`)),mdx(\"h3\",{\"id\":\"development-overrides-for-provider-developers\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#development-overrides-for-provider-developers\",\"aria-label\":\"development overrides for provider developers permalink\"},`\\xbb`),`Development Overrides for Provider Developers`),mdx(\"div\",{\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` Development overrides work only in Terraform v0.14 and later.\nUsing a `,mdx(\"inlineCode\",{parentName:\"p\"},`dev_overrides`),` block in your CLI configuration will cause Terraform\nv0.13 to reject the configuration as invalid.`)),mdx(\"p\",null,`Normally Terraform verifies version selections and checksums for providers\nin order to help ensure that all operations are made with the intended version\nof a provider, and that authors can gradually upgrade to newer provider versions\nin a controlled manner.`),mdx(\"p\",null,`These version and checksum rules are inconvenient when developing a provider\nthough, because we often want to try a test configuration against a development\nbuild of a provider that doesn't even have an associated version number yet,\nand doesn't have an official set of checksums listed in a provider registry.`),mdx(\"p\",null,`As a convenience for provider development, Terraform supports a special\nadditional block `,mdx(\"inlineCode\",{parentName:\"p\"},`dev_overrides`),` in `,mdx(\"inlineCode\",{parentName:\"p\"},`provider_installation`),` blocks. The contents\nof this block effectively override all of the other configured installation\nmethods, so a block of this type must always appear first in the sequence:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"hcl\",\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`provider_installation`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  # Use /home/developer/tmp/terraform-null as an overridden package directory`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  # for the hashicorp/null provider. This disables the version and checksum`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  # verifications for this provider and forces Terraform to look for the`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  # null provider plugin in the given directory.`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  dev_overrides`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"hashicorp/null\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` = `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"/home/developer/tmp/terraform-null\"`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  # For all other providers, install them directly from their origin provider`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  # registries as normal. If you omit this, Terraform will _only_ use`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  # the dev_overrides block, and so no other providers will be available.`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  direct`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {}`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)),mdx(\"p\",null,`With development overrides in effect, the `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform init`),` command will still\nattempt to select a suitable published version of your provider to install and\nrecord in\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/language/files/dependency-lock\"},`the dependency lock file`),`\nfor future use, but other commands like\n`,mdx(\"inlineCode\",{parentName:\"p\"},`terraform apply`),` will disregard the lock file's entry for `,mdx(\"inlineCode\",{parentName:\"p\"},`hashicorp/null`),` and\nwill use the given directory instead. Once your new changes are included in a\npublished release of the provider, you can use `,mdx(\"inlineCode\",{parentName:\"p\"},`terraform init -upgrade`),` to\nselect the new version in the dependency lock file and remove your development\noverride.`),mdx(\"p\",null,`The override path for a particular provider should be a directory similar to\nwhat would be included in a `,mdx(\"inlineCode\",{parentName:\"p\"},`.zip`),` file when distributing the provider. At\nminimum that includes an executable file named with a prefix like\n`,mdx(\"inlineCode\",{parentName:\"p\"},`terraform-provider-null`),`, where `,mdx(\"inlineCode\",{parentName:\"p\"},`null`),` is the provider type. If your provider\nmakes use of other files in its distribution package then you can copy those\nfiles into the override directory too.`),mdx(\"p\",null,`You may wish to enable a development override only for shell sessions where\nyou are actively working on provider development. If so, you can write a\nlocal CLI configuration file with content like the above in your development\ndirectory, perhaps called `,mdx(\"inlineCode\",{parentName:\"p\"},`dev.tfrc`),` for the sake of example, and then use the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`TF_CLI_CONFIG_FILE`),` environment variable to instruct Terraform to use that\nlocalized CLI configuration instead of the default one:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`export TF_CLI_CONFIG_FILE=/home/developer/tmp/dev.tfrc\n`)),mdx(\"p\",null,`Development overrides are not intended for general use as a way to have\nTerraform look for providers on the local filesystem. If you wish to put\ncopies of `,mdx(\"em\",{parentName:\"p\"},`released`),` providers in your local filesystem, see\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#implied-local-mirror-directories\"},`Implied Local Mirror Directories`),`\nor\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#explicit-installation-method-configuration\"},`Explicit Installation Method Configuration`),`\ninstead.`),mdx(\"p\",null,`This development overrides mechanism is intended as a pragmatic way to enable\nsmoother provider development. The details of how it behaves, how to\nconfigure it, and how it interacts with the dependency lock file may all evolve\nin future Terraform releases, including possible breaking changes. We therefore\nrecommend using development overrides only temporarily during provider\ndevelopment work.`),mdx(\"h2\",{\"id\":\"removed-settings\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#removed-settings\",\"aria-label\":\"removed settings permalink\"},`\\xbb`),`Removed Settings`),mdx(\"p\",null,`The following settings are supported in Terraform 0.12 and earlier but are\nno longer recommended for use:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"id\":\"providers\",\"className\":\"__target-lic\",\"aria-hidden\":\"true\"}),mdx(\"a\",{parentName:\"li\",\"href\":\"#providers\",\"aria-label\":\"providers permalink\",\"className\":\"__permalink-lic\"},mdx(\"inlineCode\",{parentName:\"a\"},`providers`)),` - a configuration block that allows specifying the locations of\nspecific plugins for each named provider. This mechanism is deprecated\nbecause it is unable to specify a version number and source for each provider.\nSee `,mdx(\"a\",{parentName:\"li\",\"href\":\"#provider-installation\"},`Provider Installation`),` above for the replacement\nof this setting in Terraform 0.13 and later.`)))};MDXContent.isMDXComponent=true;","scope":{"product":"terraform","version":"latest"}},"product":{"slug":"terraform","name":"Terraform","algoliaConfig":{"indexName":"product_TERRAFORM"},"alertBannerActive":true,"alertBanner":{"tag":"New","url":"https://www.hashicorp.com/blog/introducing-the-infrastructure-cloud","text":"Terraform Cloud is now HCP Terraform","linkText":"Read more →","expirationDate":"2024-04-29T00:00:00-08:00"},"basePaths":["cdktf","cli","cloud-docs","cloud-docs/agents","docs","enterprise","internals","intro","language","plugin","plugin/framework","plugin/log","plugin/mux","plugin/sdkv2","plugin/testing","registry","downloads"],"docsNavItems":["docs","intro","language","cli","cloud-docs","enterprise","cdktf",{"icon":"provider","label":"Provider Use","fullPath":"/terraform/language/providers"},"plugin","registry",{"icon":"handshake","label":"Integration Program","fullPath":"/terraform/docs/partnerships"}],"rootDocsPaths":[{"iconName":"code","name":"CDK for Terraform","path":"cdktf","productSlugForLoader":"terraform-cdk"},{"iconName":"terminal-screen","name":"Terraform CLI","path":"cli"},{"iconName":"cloud","name":"HCP Terraform","path":"cloud-docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"cloud","name":"HCP Terraform Agents","navDataPrefix":"cloud-docs-agents","path":"cloud-docs/agents","productSlugForLoader":"terraform-docs-agents"},{"iconName":"docs","name":"Documentation","path":"docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"org","name":"Terraform Enterprise","path":"enterprise","productSlugForLoader":"terraform-enterprise"},{"iconName":"docs","name":"Internals","path":"internals"},{"iconName":"docs","name":"Intro to Terraform","path":"intro"},{"iconName":"file-source","name":"Configuration Language","path":"language"},{"iconName":"wrench","name":"Plugin Development","path":"plugin","productSlugForLoader":"terraform-docs-common"},{"iconName":"plug","name":"Framework","navDataPrefix":"plugin-framework","path":"plugin/framework","productSlugForLoader":"terraform-plugin-framework"},{"iconName":"plug","name":"Logging","navDataPrefix":"plugin-log","path":"plugin/log","productSlugForLoader":"terraform-plugin-log"},{"iconName":"plug","name":"Combining and Translating","navDataPrefix":"plugin-mux","path":"plugin/mux","productSlugForLoader":"terraform-plugin-mux"},{"iconName":"plug","name":"SDKv2","path":"plugin/sdkv2","productSlugForLoader":"terraform-plugin-sdk","navDataPrefix":"plugin-sdkv2"},{"iconName":"plug","name":"Testing","path":"plugin/testing","productSlugForLoader":"terraform-plugin-testing","navDataPrefix":"plugin-testing"},{"iconName":"plus-circle","name":"Registry Publishing","path":"registry","productSlugForLoader":"terraform-docs-common"}],"currentRootDocsPath":{"iconName":"terminal-screen","name":"Terraform CLI","path":"cli"}},"projectName":null,"versions":null},"__N_SSG":true}