{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Terraform","url":"/terraform"},{"title":"Intro to Terraform","url":"/terraform/intro","isCurrentPage":false},{"title":"Use Cases","url":"/terraform/intro/use-cases","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Terraform Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Terraform","fullPath":"/terraform","theme":"terraform"},{"title":"Install","fullPath":"/terraform/install"},{"title":"Intro to Terraform","fullPath":"/terraform/intro"},{"title":"Tutorials","fullPath":"/terraform/tutorials"},{"title":"Documentation","isOpen":true,"routes":[{"title":"Documentation","fullPath":"/terraform/docs"},{"title":"Configuration Language","fullPath":"/terraform/language"},{"title":"Terraform CLI","fullPath":"/terraform/cli"},{"title":"HCP Terraform","fullPath":"/terraform/cloud-docs"},{"title":"Terraform Enterprise","fullPath":"/terraform/enterprise"},{"title":"CDK for Terraform","fullPath":"/terraform/cdktf"},{"title":"Provider Use","fullPath":"/terraform/language/providers"},{"title":"Plugin Development","fullPath":"/terraform/plugin"},{"title":"Registry Publishing","fullPath":"/terraform/registry"},{"title":"Integration Program","fullPath":"/terraform/docs/partnerships"}]}],"showFilterInput":false,"title":"Terraform","visuallyHideTitle":true},{"backToLinkProps":{"text":"Terraform Home","href":"/terraform"},"levelButtonProps":{"levelUpButtonText":"Terraform Home"},"menuItems":[{"title":"Intro to Terraform","fullPath":"/terraform/intro","theme":"terraform"},{"title":"Use Cases","path":"use-cases","filePath":"../docs/intro/use-cases.mdx","fullPath":"/terraform/intro/use-cases","id":"sidebar-nav-item-2"},{"title":"Get Started","href":"/terraform/tutorials/aws-get-started?utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS","id":"sidebar-nav-item-3"},{"title":"Terraform Editions","path":"terraform-editions","filePath":"../docs/intro/terraform-editions.mdx","fullPath":"/terraform/intro/terraform-editions","id":"sidebar-nav-item-4"},{"title":"The Core Terraform Workflow","path":"core-workflow","filePath":"../docs/intro/core-workflow.mdx","fullPath":"/terraform/intro/core-workflow","id":"sidebar-nav-item-5"},{"title":"Phases of Terraform Adoption","routes":[{"title":"Overview","path":"phases","filePath":"../docs/intro/phases/index.mdx","fullPath":"/terraform/intro/phases","id":"sidebar-nav-item-7"},{"title":"Adopt","path":"phases/adopt","filePath":"../docs/intro/phases/adopt.mdx","fullPath":"/terraform/intro/phases/adopt","id":"sidebar-nav-item-8"},{"title":"Collaborate","path":"phases/collaborate","filePath":"../docs/intro/phases/collaborate.mdx","fullPath":"/terraform/intro/phases/collaborate","id":"sidebar-nav-item-9"},{"title":"Scale","path":"phases/scale","filePath":"../docs/intro/phases/scale.mdx","fullPath":"/terraform/intro/phases/scale","id":"sidebar-nav-item-10"},{"title":"Govern","path":"phases/govern","filePath":"../docs/intro/phases/govern.mdx","fullPath":"/terraform/intro/phases/govern","id":"sidebar-nav-item-11"}],"id":"sidebar-nav-item-6"},{"title":"Terraform vs. Alternatives","routes":[{"title":"Overview","path":"vs","filePath":"../docs/intro/vs/index.mdx","fullPath":"/terraform/intro/vs","id":"sidebar-nav-item-13"},{"title":"Chef, Puppet, etc.","path":"vs/chef-puppet","filePath":"../docs/intro/vs/chef-puppet.mdx","fullPath":"/terraform/intro/vs/chef-puppet","id":"sidebar-nav-item-14"},{"title":"CloudFormation, Heat, etc.","path":"vs/cloudformation","filePath":"../docs/intro/vs/cloudformation.mdx","fullPath":"/terraform/intro/vs/cloudformation","id":"sidebar-nav-item-15"},{"title":"Boto, Fog, etc.","path":"vs/boto","filePath":"../docs/intro/vs/boto.mdx","fullPath":"/terraform/intro/vs/boto","id":"sidebar-nav-item-16"},{"title":"Custom Solutions","path":"vs/custom","filePath":"../docs/intro/vs/custom.mdx","fullPath":"/terraform/intro/vs/custom","id":"sidebar-nav-item-17"}],"id":"sidebar-nav-item-12"}],"title":"Intro to Terraform","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/terraform/blob/main/website/../docs/intro/use-cases.mdx"},"metadata":{"title":"Use Cases","description":"Learn about Terraform use cases, such as enabling multi-cloud deployments, application management, policy compliance, and self-service infrastructure.","layout":null},"outlineItems":[{"title":"Terraform Use Cases","url":"#terraform-use-cases"},{"title":"Codify your infrastructure","url":"#codify-your-infrastructure"},{"title":"Multi-cloud deployment","url":"#multi-cloud-deployment"},{"title":"Multi-environment deployments","url":"#multi-environment-deployments"},{"title":"Application infrastructure deployment, scaling, and monitoring tools","url":"#application-infrastructure-deployment-scaling-and-monitoring-tools"},{"title":"Self-service infrastructure","url":"#self-service-infrastructure"},{"title":"Policy compliance and management","url":"#policy-compliance-and-management"},{"title":"Software-defined networking","url":"#software-defined-networking"},{"title":"Kubernetes","url":"#kubernetes"}],"pageHeading":{"id":"terraform-use-cases","title":"Terraform Use Cases"},"mdxSource":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",null,`⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️`),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},`[!IMPORTANT]`,mdx(\"br\",{parentName:\"p\"}),`\n`,mdx(\"strong\",{parentName:\"p\"},`Documentation Update:`),` Product documentation previously located in `,mdx(\"inlineCode\",{parentName:\"p\"},`/website`),` has moved to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/web-unified-docs\"},mdx(\"inlineCode\",{parentName:\"a\"},`hashicorp/web-unified-docs`)),` repository, where all product documentation is now centralized. Please make contributions directly to `,mdx(\"inlineCode\",{parentName:\"p\"},`web-unified-docs`),`, since changes to `,mdx(\"inlineCode\",{parentName:\"p\"},`/website`),` in this repository will not appear on developer.hashicorp.com.\n⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️`)),mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/intro\"},`HashiCorp Terraform`),` is an infrastructure as code (IaC) tool that lets you define infrastructure resources in human-readable configuration files that you can version, reuse, and share. You can then use a consistent workflow to safely and efficiently provision and manage your infrastructure throughout its lifecycle.`),mdx(\"p\",null,`This page describes popular Terraform use cases and provides related resources that you can use to create Terraform configurations and workflows.`),mdx(\"h2\",{\"id\":\"codify-your-infrastructure\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#codify-your-infrastructure\",\"aria-label\":\"codify your infrastructure permalink\"},`\\xbb`),`Codify your infrastructure`),mdx(\"p\",null,`By capturing and building your infrastructure as code, you make your deployments faster, repeatable, and easier to collaborate on. Terraform codifies cloud APIs into declarative configuration files using HashiCorp Configuration Language (HCL). You define the desired state of your infrastructure in HCL, and Terraform deploys and configures resources to match your configuration.`),mdx(\"p\",null,`You can use Terraform to configure your networks, servers, and databases, as well as manage other your resources such as containers, machine images, web services, and observability services.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Get started with Terraform on `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/aws-get-started\"},`AWS`),`, `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/azure-get-started\"},`Azure`),`, `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/gcp-get-started\"},`Google Cloud`),`, or `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/docker-get-started\"},`Docker`),`.`),mdx(\"li\",{parentName:\"ul\"},`Read HashiCorp's Well-Architected Framework to learn how to `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://terraform.io/operational-excellence/operational-excellence-manage-your-infrastructure-components-with-terraform\"},`codify your infrastructure with Terraform`),`.`)),mdx(\"h2\",{\"id\":\"multi-cloud-deployment\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#multi-cloud-deployment\",\"aria-label\":\"multi cloud deployment permalink\"},`\\xbb`),`Multi-cloud deployment`),mdx(\"p\",null,`Provisioning infrastructure across multiple clouds increases fault-tolerance, allowing for more graceful recovery from cloud provider outages. However, multi-cloud deployments add complexity because each provider has its own interfaces, tools, and workflows. Terraform lets you use the same workflow to manage multiple providers and handle cross-cloud dependencies. This simplifies management and orchestration for large-scale, multi-cloud infrastructures.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Learn how to `,mdx(\"a\",{parentName:\"li\",\"href\":\"/packer/tutorials/cloud-production/multicloud\"},`standardize artifacts across multiple cloud providers`),` with Terraform and Packer.`),mdx(\"li\",{parentName:\"ul\"},`Try our `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/networking/multicloud-kubernetes\"},`Deploy Federated Multi-Cloud Kubernetes Clusters`),` tutorial to provision Kubernetes clusters in both Azure and AWS environments, configure Consul federation with mesh gateways across the two clusters, and deploy microservices across the two clusters to verify federation.`),mdx(\"li\",{parentName:\"ul\"},`Browse the `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://registry.terraform.io/browse/providers\"},`Terraform Registry`),` to find thousands of publicly available providers.`)),mdx(\"h2\",{\"id\":\"multi-environment-deployments\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#multi-environment-deployments\",\"aria-label\":\"multi environment deployments permalink\"},`\\xbb`),`Multi-environment deployments`),mdx(\"p\",null,`Application development workflows can depend on multiple environments to test features, such as QA and staging, before releasing them to production. As production grows more complex, it becomes increasingly difficult to synchronize deployments and keep them up-to-date for each stage of the development process. `),mdx(\"p\",null,mdx(\"a\",{parentName:\"p\",\"href\":\"/terraform/language/stacks\"},`Terraform Stacks`),` let you split your Terraform configuration into components and then deploy and manage those components across multiple environments. You can manage the lifecycle of each deployment separately, making it easy to validate changes throughout your deployments.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Learn about `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/language/stacks/use-cases\"},`Stacks use cases`),`.`),mdx(\"li\",{parentName:\"ul\"},`Read the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/cloud/stacks-deploy\"},`Deploy a Stack with HCP Terraform`),` tutorial to get hands-on experience. You will create a Terraform Stack that deploys an AWS Lambda function across a development, test, and production environment.`)),mdx(\"h2\",{\"id\":\"application-infrastructure-deployment-scaling-and-monitoring-tools\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#application-infrastructure-deployment-scaling-and-monitoring-tools\",\"aria-label\":\"application infrastructure deployment scaling and monitoring tools permalink\"},`\\xbb`),`Application infrastructure deployment, scaling, and monitoring tools`),mdx(\"p\",null,`You can use Terraform to efficiently deploy, release, scale, and monitor infrastructure for multi-tier applications. N-tier application architecture lets you scale application components independently and provides a separation of concerns. An application could consist of a pool of web servers that use a database tier, with additional tiers for API servers, caching servers, and routing meshes. Terraform allows you to manage the resources in each tier together, and automatically handles dependencies between tiers. For example, Terraform will deploy a database tier before provisioning the web servers that depend on it.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Try our `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/applications/datadog-provider\"},`Automate Monitoring with the Terraform Datadog Provider`),` tutorial to deploy a demo Nginx application to a Kubernetes cluster with Helm and install the Datadog agent across the cluster. The Datadog agent reports the cluster health back to your Datadog dashboard.`),mdx(\"li\",{parentName:\"ul\"},`Try our `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/aws/blue-green-canary-tests-deployments\"},`Use Application Load Balancers for Blue-Green and Canary Deployments`),` tutorial. You will provision the blue and green environments, add feature toggles to your Terraform configuration to define a list of potential deployment strategies, conduct a canary test, and incrementally promote your green environment.`),mdx(\"li\",{parentName:\"ul\"},`Read the HashiCorp Well-Architected Framework recommendations for `,mdx(\"a\",{parentName:\"li\",\"href\":\"/well-architected-framework/reliability/reliability-deploy-application-monitoring-components\"},`managing infrastructure and service monitoring`))),mdx(\"h2\",{\"id\":\"self-service-infrastructure\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#self-service-infrastructure\",\"aria-label\":\"self service infrastructure permalink\"},`\\xbb`),`Self-service infrastructure`),mdx(\"p\",null,`At a large organization, your centralized operations team may get many repetitive infrastructure requests. You can use Terraform to build a \"self-serve\" infrastructure model that lets product teams manage their own infrastructure independently. You can create and use Terraform modules that codify the standards for deploying and managing services in your organization, allowing teams to efficiently deploy services in compliance with your organization's practices. HCP Terraform can also integrate with ticketing systems like ServiceNow to automatically generate new infrastructure requests.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Try the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/modules/module-use\"},`Use Modules from the Registry`),` tutorial to get started using public modules in your Terraform configuration.\nTry the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/modules/module-create\"},`Build and Use a Local Module`),` tutorial to create a module to manage AWS S3 buckets.`),mdx(\"li\",{parentName:\"ul\"},`Follow these `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cloud-docs/integrations/service-now\"},`ServiceNow Service Catalog Integration Setup Instructions`),` to connect ServiceNow to HCP Terraform.`)),mdx(\"h2\",{\"id\":\"policy-compliance-and-management\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#policy-compliance-and-management\",\"aria-label\":\"policy compliance and management permalink\"},`\\xbb`),`Policy compliance and management`),mdx(\"p\",null,`Terraform can help you enforce policies on the types of resources teams can provision and use. Ticket-based review processes are a bottleneck that can slow down development. Instead, you can use Sentinel, a policy-as-code framework, to automatically enforce compliance and governance policies before Terraform makes infrastructure changes. Sentinel policies are available in Terraform Enterprise and `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.hashicorp.com/products/terraform/pricing\"},`HCP Terraform`),`.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Try the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/cloud-get-started/cost-estimation\"},`Control Costs with Policies`),` tutorial to estimate the cost of infrastructure changes and define policy to limit it.`),mdx(\"li\",{parentName:\"ul\"},`The `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/cloud-docs/policy-enforcement\"},`Sentinel documentation`),` provides more in-depth information and a list of example policies that you can adapt for your use cases.`)),mdx(\"h2\",{\"id\":\"software-defined-networking\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#software-defined-networking\",\"aria-label\":\"software defined networking permalink\"},`\\xbb`),`Software-defined networking`),mdx(\"p\",null,`Terraform can interact with Software Defined Networks (SDNs) to automatically configure the network according to the needs of the applications running in it. This lets you move from a ticket-based workflow to an automated one, reducing deployment times.`),mdx(\"p\",null,`For example, when a service registers with `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.consul.io/\"},`HashiCorp Consul`),`, `,mdx(\"a\",{parentName:\"p\",\"href\":\"/consul/docs/nia\"},`Consul-Terraform-Sync`),` can automatically generate Terraform configuration to expose appropriate ports and adjust network settings for any SDN that has an associated Terraform provider. Network Infrastructure Automation (NIA) allows you to safely approve the changes that your applications require without having to manually translate tickets from developers into the changes you think their applications need.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Try the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/tutorials/network-infrastructure-automation/consul-terraform-sync-intro\"},`Network Infrastructure Automation with Consul-Terraform-Sync Intro`),` tutorial to install Consul-Terraform-Sync on a node. You will then configure it to communicate with a Consul datacenter, react to service changes, and execute an example task.`),mdx(\"li\",{parentName:\"ul\"},`Try the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/consul/tutorials/network-infrastructure-automation/consul-terraform-sync-terraform-enterprise\"},`Consul-Terraform-Sync and Terraform Enterprise/Cloud Integration`),` tutorial to configure Consul-Terraform-Sync to interact with Terraform Enterprise and HCP Terraform.`)),mdx(\"h2\",{\"id\":\"kubernetes\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#kubernetes\",\"aria-label\":\"kubernetes permalink\"},`\\xbb`),`Kubernetes`),mdx(\"p\",null,`Kubernetes is an open-source workload scheduler for containerized applications. Terraform lets you both deploy a Kubernetes cluster and manage its resources (e.g., pods, deployments, services, etc.). You can also use the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/terraform-k8s\"},`Kubernetes Operator for Terraform`),` to manage cloud and on-prem infrastructure through a Kubernetes Custom Resource Definition (CRD) and HCP Terraform.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Learn how to provision a Kubernetes cluster in `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/kubernetes/eks\"},`AWS`),`, `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/kubernetes/gke\"},`Google Cloud Platform`),`, and `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/kubernetes/aks\"},`Azure`),`.`),mdx(\"li\",{parentName:\"ul\"},`Try the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/kubernetes/kubernetes-provider\"},`Manage Kubernetes Resources via Terraform`),` tutorial. You will use Terraform to schedule and expose a NGINX deployment on a Kubernetes cluster.`),mdx(\"li\",{parentName:\"ul\"},`Learn how to `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/kubernetes/helm-provider\"},`deploy applications with the Helm provider`),`.`),mdx(\"li\",{parentName:\"ul\"},`Try the `,mdx(\"a\",{parentName:\"li\",\"href\":\"/terraform/tutorials/kubernetes/kubernetes-operator-v2\"},`Deploy Infrastructure with the HCP Terraform Operator for Kubernetes`),` tutorial. You will configure and deploy the Operator to a Kubernetes cluster and use it to create an HCP Terraform workspace and provision a message queue for an example application.`)))};MDXContent.isMDXComponent=true;","scope":{"product":"terraform","version":"latest"}},"product":{"slug":"terraform","name":"Terraform","algoliaConfig":{"indexName":"product_TERRAFORM"},"alertBannerActive":true,"alertBanner":{"tag":"New","url":"https://www.hashicorp.com/blog/introducing-the-infrastructure-cloud","text":"Terraform Cloud is now HCP Terraform","linkText":"Read more →","expirationDate":"2024-04-29T00:00:00-08:00"},"basePaths":["cdktf","cli","cloud-docs","cloud-docs/agents","docs","enterprise","internals","intro","language","plugin","plugin/framework","plugin/log","plugin/mux","plugin/sdkv2","plugin/testing","registry","downloads"],"docsNavItems":["docs","intro","language","cli","cloud-docs","enterprise","cdktf",{"icon":"provider","label":"Provider Use","fullPath":"/terraform/language/providers"},"plugin","registry",{"icon":"handshake","label":"Integration Program","fullPath":"/terraform/docs/partnerships"}],"rootDocsPaths":[{"iconName":"code","name":"CDK for Terraform","path":"cdktf","productSlugForLoader":"terraform-cdk"},{"iconName":"terminal-screen","name":"Terraform CLI","path":"cli"},{"iconName":"cloud","name":"HCP Terraform","path":"cloud-docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"cloud","name":"HCP Terraform Agents","navDataPrefix":"cloud-docs-agents","path":"cloud-docs/agents","productSlugForLoader":"terraform-docs-agents"},{"iconName":"docs","name":"Documentation","path":"docs","productSlugForLoader":"terraform-docs-common"},{"iconName":"org","name":"Terraform Enterprise","path":"enterprise","productSlugForLoader":"terraform-enterprise"},{"iconName":"docs","name":"Internals","path":"internals"},{"iconName":"docs","name":"Intro to Terraform","path":"intro"},{"iconName":"file-source","name":"Configuration Language","path":"language"},{"iconName":"wrench","name":"Plugin Development","path":"plugin","productSlugForLoader":"terraform-docs-common"},{"iconName":"plug","name":"Framework","navDataPrefix":"plugin-framework","path":"plugin/framework","productSlugForLoader":"terraform-plugin-framework"},{"iconName":"plug","name":"Logging","navDataPrefix":"plugin-log","path":"plugin/log","productSlugForLoader":"terraform-plugin-log"},{"iconName":"plug","name":"Combining and Translating","navDataPrefix":"plugin-mux","path":"plugin/mux","productSlugForLoader":"terraform-plugin-mux"},{"iconName":"plug","name":"SDKv2","path":"plugin/sdkv2","productSlugForLoader":"terraform-plugin-sdk","navDataPrefix":"plugin-sdkv2"},{"iconName":"plug","name":"Testing","path":"plugin/testing","productSlugForLoader":"terraform-plugin-testing","navDataPrefix":"plugin-testing"},{"iconName":"plus-circle","name":"Registry Publishing","path":"registry","productSlugForLoader":"terraform-docs-common"}],"currentRootDocsPath":{"iconName":"docs","name":"Intro to Terraform","path":"intro"}},"projectName":null,"versions":null},"__N_SSG":true}